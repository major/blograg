{
  "schema_name": "DoclingDocument",
  "version": "1.4.0",
  "name": "index",
  "origin": {
    "mimetype": "text/markdown",
    "binary_hash": 11166159287206821391,
    "filename": "index.md"
  },
  "furniture": {
    "self_ref": "#/furniture",
    "children": [],
    "content_layer": "furniture",
    "name": "_root_",
    "label": "unspecified"
  },
  "body": {
    "self_ref": "#/body",
    "children": [
      {
        "$ref": "#/texts/0"
      },
      {
        "$ref": "#/groups/0"
      },
      {
        "$ref": "#/pictures/0"
      },
      {
        "$ref": "#/texts/9"
      },
      {
        "$ref": "#/texts/10"
      },
      {
        "$ref": "#/texts/11"
      },
      {
        "$ref": "#/texts/12"
      },
      {
        "$ref": "#/texts/13"
      },
      {
        "$ref": "#/texts/14"
      },
      {
        "$ref": "#/texts/15"
      },
      {
        "$ref": "#/texts/16"
      },
      {
        "$ref": "#/groups/1"
      },
      {
        "$ref": "#/texts/20"
      },
      {
        "$ref": "#/texts/21"
      },
      {
        "$ref": "#/texts/22"
      },
      {
        "$ref": "#/texts/23"
      },
      {
        "$ref": "#/texts/24"
      },
      {
        "$ref": "#/texts/25"
      },
      {
        "$ref": "#/texts/26"
      },
      {
        "$ref": "#/texts/27"
      },
      {
        "$ref": "#/texts/28"
      },
      {
        "$ref": "#/texts/29"
      },
      {
        "$ref": "#/texts/30"
      },
      {
        "$ref": "#/texts/31"
      },
      {
        "$ref": "#/texts/32"
      },
      {
        "$ref": "#/texts/33"
      },
      {
        "$ref": "#/texts/34"
      },
      {
        "$ref": "#/texts/35"
      },
      {
        "$ref": "#/texts/36"
      },
      {
        "$ref": "#/texts/37"
      },
      {
        "$ref": "#/texts/38"
      },
      {
        "$ref": "#/texts/39"
      },
      {
        "$ref": "#/texts/40"
      },
      {
        "$ref": "#/texts/41"
      },
      {
        "$ref": "#/texts/42"
      },
      {
        "$ref": "#/texts/43"
      },
      {
        "$ref": "#/texts/44"
      },
      {
        "$ref": "#/texts/45"
      },
      {
        "$ref": "#/texts/46"
      },
      {
        "$ref": "#/texts/47"
      },
      {
        "$ref": "#/texts/48"
      },
      {
        "$ref": "#/texts/49"
      },
      {
        "$ref": "#/texts/50"
      },
      {
        "$ref": "#/texts/51"
      },
      {
        "$ref": "#/texts/52"
      },
      {
        "$ref": "#/texts/53"
      },
      {
        "$ref": "#/texts/54"
      },
      {
        "$ref": "#/texts/55"
      },
      {
        "$ref": "#/texts/56"
      },
      {
        "$ref": "#/texts/57"
      },
      {
        "$ref": "#/texts/58"
      },
      {
        "$ref": "#/texts/59"
      },
      {
        "$ref": "#/texts/60"
      },
      {
        "$ref": "#/texts/61"
      },
      {
        "$ref": "#/texts/62"
      },
      {
        "$ref": "#/texts/63"
      },
      {
        "$ref": "#/texts/64"
      },
      {
        "$ref": "#/texts/65"
      },
      {
        "$ref": "#/texts/66"
      },
      {
        "$ref": "#/texts/67"
      },
      {
        "$ref": "#/texts/68"
      },
      {
        "$ref": "#/texts/69"
      },
      {
        "$ref": "#/texts/70"
      },
      {
        "$ref": "#/texts/71"
      },
      {
        "$ref": "#/texts/72"
      },
      {
        "$ref": "#/texts/73"
      },
      {
        "$ref": "#/texts/74"
      },
      {
        "$ref": "#/groups/2"
      },
      {
        "$ref": "#/texts/81"
      },
      {
        "$ref": "#/texts/82"
      },
      {
        "$ref": "#/texts/83"
      },
      {
        "$ref": "#/texts/84"
      },
      {
        "$ref": "#/texts/85"
      },
      {
        "$ref": "#/texts/86"
      },
      {
        "$ref": "#/texts/87"
      },
      {
        "$ref": "#/texts/88"
      },
      {
        "$ref": "#/texts/89"
      },
      {
        "$ref": "#/texts/90"
      },
      {
        "$ref": "#/texts/91"
      },
      {
        "$ref": "#/texts/92"
      },
      {
        "$ref": "#/texts/93"
      },
      {
        "$ref": "#/texts/94"
      },
      {
        "$ref": "#/texts/95"
      },
      {
        "$ref": "#/texts/96"
      },
      {
        "$ref": "#/texts/97"
      },
      {
        "$ref": "#/texts/98"
      },
      {
        "$ref": "#/texts/99"
      },
      {
        "$ref": "#/texts/100"
      },
      {
        "$ref": "#/texts/101"
      },
      {
        "$ref": "#/texts/102"
      },
      {
        "$ref": "#/texts/103"
      },
      {
        "$ref": "#/texts/104"
      },
      {
        "$ref": "#/texts/105"
      },
      {
        "$ref": "#/texts/106"
      },
      {
        "$ref": "#/texts/107"
      },
      {
        "$ref": "#/texts/108"
      },
      {
        "$ref": "#/texts/109"
      },
      {
        "$ref": "#/texts/110"
      },
      {
        "$ref": "#/texts/111"
      },
      {
        "$ref": "#/texts/112"
      },
      {
        "$ref": "#/texts/113"
      },
      {
        "$ref": "#/texts/114"
      },
      {
        "$ref": "#/texts/115"
      },
      {
        "$ref": "#/texts/116"
      },
      {
        "$ref": "#/texts/117"
      },
      {
        "$ref": "#/texts/118"
      },
      {
        "$ref": "#/texts/119"
      },
      {
        "$ref": "#/texts/120"
      },
      {
        "$ref": "#/texts/121"
      },
      {
        "$ref": "#/texts/122"
      },
      {
        "$ref": "#/texts/123"
      },
      {
        "$ref": "#/texts/124"
      },
      {
        "$ref": "#/texts/125"
      },
      {
        "$ref": "#/texts/126"
      },
      {
        "$ref": "#/texts/127"
      },
      {
        "$ref": "#/texts/128"
      },
      {
        "$ref": "#/texts/129"
      },
      {
        "$ref": "#/texts/130"
      },
      {
        "$ref": "#/texts/131"
      },
      {
        "$ref": "#/texts/132"
      },
      {
        "$ref": "#/texts/133"
      },
      {
        "$ref": "#/texts/134"
      },
      {
        "$ref": "#/texts/135"
      },
      {
        "$ref": "#/texts/136"
      },
      {
        "$ref": "#/texts/137"
      },
      {
        "$ref": "#/texts/138"
      },
      {
        "$ref": "#/texts/139"
      },
      {
        "$ref": "#/texts/140"
      },
      {
        "$ref": "#/texts/141"
      },
      {
        "$ref": "#/texts/142"
      },
      {
        "$ref": "#/texts/143"
      },
      {
        "$ref": "#/texts/144"
      },
      {
        "$ref": "#/texts/145"
      },
      {
        "$ref": "#/texts/146"
      },
      {
        "$ref": "#/texts/147"
      }
    ],
    "content_layer": "body",
    "name": "_root_",
    "label": "unspecified"
  },
  "groups": [
    {
      "self_ref": "#/groups/0",
      "parent": {
        "$ref": "#/body"
      },
      "children": [
        {
          "$ref": "#/texts/1"
        },
        {
          "$ref": "#/texts/2"
        },
        {
          "$ref": "#/texts/3"
        },
        {
          "$ref": "#/texts/4"
        },
        {
          "$ref": "#/texts/5"
        },
        {
          "$ref": "#/texts/6"
        },
        {
          "$ref": "#/texts/7"
        },
        {
          "$ref": "#/texts/8"
        }
      ],
      "content_layer": "body",
      "name": "list",
      "label": "list"
    },
    {
      "self_ref": "#/groups/1",
      "parent": {
        "$ref": "#/body"
      },
      "children": [
        {
          "$ref": "#/texts/17"
        },
        {
          "$ref": "#/texts/18"
        },
        {
          "$ref": "#/texts/19"
        }
      ],
      "content_layer": "body",
      "name": "list",
      "label": "list"
    },
    {
      "self_ref": "#/groups/2",
      "parent": {
        "$ref": "#/body"
      },
      "children": [
        {
          "$ref": "#/texts/75"
        },
        {
          "$ref": "#/texts/76"
        },
        {
          "$ref": "#/texts/77"
        },
        {
          "$ref": "#/texts/78"
        },
        {
          "$ref": "#/texts/79"
        },
        {
          "$ref": "#/texts/80"
        }
      ],
      "content_layer": "body",
      "name": "list",
      "label": "list"
    }
  ],
  "texts": [
    {
      "self_ref": "#/texts/0",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "aliases:",
      "text": "aliases:"
    },
    {
      "self_ref": "#/texts/1",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "/2015/09/10/chronicles-of-selinux-dealing-with-web-content-in-unusual-directories/",
      "text": "/2015/09/10/chronicles-of-selinux-dealing-with-web-content-in-unusual-directories/",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/2",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "centos",
      "text": "centos",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/3",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "command line",
      "text": "command line",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/4",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "fedora",
      "text": "fedora",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/5",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "rhel",
      "text": "rhel",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/6",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "security",
      "text": "security",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/7",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "selinux",
      "text": "selinux",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/8",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "web",
      "text": "web",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/9",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "1",
      "text": "1"
    },
    {
      "self_ref": "#/texts/10",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "I've decided to start a series of posts called \"Chronicles of SELinux\" where I hope to educate more users on how to handle SELinux denials with finesse rather than simply  disabling it entirely . To kick things off, I'll be talking about dealing with web content in the first post.",
      "text": "I've decided to start a series of posts called \"Chronicles of SELinux\" where I hope to educate more users on how to handle SELinux denials with finesse rather than simply  disabling it entirely . To kick things off, I'll be talking about dealing with web content in the first post."
    },
    {
      "self_ref": "#/texts/11",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "section_header",
      "prov": [],
      "orig": "First steps",
      "text": "First steps",
      "level": 1
    },
    {
      "self_ref": "#/texts/12",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "If you'd like to follow along, simply hop onto a system running Fedora 21 (or later), CentOS 7 or Red Hat Enterprise Linux 7. We need SELinux in enforcing mode on the host, so be sure to check the status with ",
      "text": "If you'd like to follow along, simply hop onto a system running Fedora 21 (or later), CentOS 7 or Red Hat Enterprise Linux 7. We need SELinux in enforcing mode on the host, so be sure to check the status with "
    },
    {
      "self_ref": "#/texts/13",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "getenforce",
      "text": "getenforce",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/14",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ". Depending on what ",
      "text": ". Depending on what "
    },
    {
      "self_ref": "#/texts/15",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "getenforce",
      "text": "getenforce",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/16",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " returns, you'll need to make adjustments:",
      "text": " returns, you'll need to make adjustments:"
    },
    {
      "self_ref": "#/texts/17",
      "parent": {
        "$ref": "#/groups/1"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "[<RawText children='Enforcing'>]",
      "text": "[<RawText children='Enforcing'>]",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/18",
      "parent": {
        "$ref": "#/groups/1"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "[<RawText children='Permissive'>]",
      "text": "[<RawText children='Permissive'>]",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/19",
      "parent": {
        "$ref": "#/groups/1"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "[<RawText children='Disabled'>]",
      "text": "[<RawText children='Disabled'>]",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/20",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "To enable enforcing mode in the SELinux configuration file, edit ",
      "text": "To enable enforcing mode in the SELinux configuration file, edit "
    },
    {
      "self_ref": "#/texts/21",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/etc/selinux/config",
      "text": "/etc/selinux/config",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/22",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " and ensure your ",
      "text": " and ensure your "
    },
    {
      "self_ref": "#/texts/23",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "SELINUX",
      "text": "SELINUX",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/24",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " line has ",
      "text": " line has "
    },
    {
      "self_ref": "#/texts/25",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "enforcing",
      "text": "enforcing",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/26",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ":",
      "text": ":"
    },
    {
      "self_ref": "#/texts/27",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "# This file controls the state of SELinux on the system.\n# SELINUX= can take one of these three values:\n#     enforcing - SELinux security policy is enforced.\n#     permissive - SELinux prints warnings instead of enforcing.\n#     disabled - No SELinux policy is loaded.\nSELINUX=enforcing",
      "text": "# This file controls the state of SELinux on the system.\n# SELINUX= can take one of these three values:\n#     enforcing - SELinux security policy is enforced.\n#     permissive - SELinux prints warnings instead of enforcing.\n#     disabled - No SELinux policy is loaded.\nSELINUX=enforcing",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/28",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "If ",
      "text": "If "
    },
    {
      "self_ref": "#/texts/29",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "getenforce",
      "text": "getenforce",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/30",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " returned  Disabled  earlier, you will need to reboot to get SELinux working. Also be sure that the ",
      "text": " returned  Disabled  earlier, you will need to reboot to get SELinux working. Also be sure that the "
    },
    {
      "self_ref": "#/texts/31",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "selinux-policy-targeted",
      "text": "selinux-policy-targeted",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/32",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " package is installed and run ",
      "text": " package is installed and run "
    },
    {
      "self_ref": "#/texts/33",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "fixfiles onboot -B",
      "text": "fixfiles onboot -B",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/34",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " to relabel the system on reboot  ( thanks to immanetize for the comment ) .",
      "text": " to relabel the system on reboot  ( thanks to immanetize for the comment ) ."
    },
    {
      "self_ref": "#/texts/35",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Let's install httpd and create a developer user:",
      "text": "Let's install httpd and create a developer user:"
    },
    {
      "self_ref": "#/texts/36",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "# For Fedora\ndnf -y install httpd\n# For CentOS/RHEL\nyum -y install httpd\n\nuseradd developer\nsystemctl enable httpd\nsystemctl start httpd",
      "text": "# For Fedora\ndnf -y install httpd\n# For CentOS/RHEL\nyum -y install httpd\n\nuseradd developer\nsystemctl enable httpd\nsystemctl start httpd",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/37",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "On to the guide!",
      "text": "On to the guide!"
    },
    {
      "self_ref": "#/texts/38",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "section_header",
      "prov": [],
      "orig": "Hosting content in an unique directory",
      "text": "Hosting content in an unique directory",
      "level": 1
    },
    {
      "self_ref": "#/texts/39",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "On Red Hat-based systems, httpd expects to find its content in ",
      "text": "On Red Hat-based systems, httpd expects to find its content in "
    },
    {
      "self_ref": "#/texts/40",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/var/www/html",
      "text": "/var/www/html",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/41",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ", but some system administrators prefer to have content stored elsewhere on the system. It could be on a SAN or other remote storage, but it could also just be in a different directory to make things easier for the business.",
      "text": ", but some system administrators prefer to have content stored elsewhere on the system. It could be on a SAN or other remote storage, but it could also just be in a different directory to make things easier for the business."
    },
    {
      "self_ref": "#/texts/42",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Let's consider a situation where the web content is hosted from ",
      "text": "Let's consider a situation where the web content is hosted from "
    },
    {
      "self_ref": "#/texts/43",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/web/",
      "text": "/web/",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/44",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ". We can create the directory:",
      "text": ". We can create the directory:"
    },
    {
      "self_ref": "#/texts/45",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "[root@fedora22 ~]# mkdir -v /web\nmkdir: created directory '/web'",
      "text": "[root@fedora22 ~]# mkdir -v /web\nmkdir: created directory '/web'",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/46",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "We can edit ",
      "text": "We can edit "
    },
    {
      "self_ref": "#/texts/47",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/etc/httpd/conf/httpd.conf",
      "text": "/etc/httpd/conf/httpd.conf",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/48",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " and set our new ",
      "text": " and set our new "
    },
    {
      "self_ref": "#/texts/49",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "DocumentRoot",
      "text": "DocumentRoot",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/50",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ":",
      "text": ":"
    },
    {
      "self_ref": "#/texts/51",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "#\n# DocumentRoot: The directory out of which you will serve your\n# documents. By default, all requests are taken from this directory, but\n# symbolic links and aliases may be used to point to other locations.\n#\nDocumentRoot \"/web\"",
      "text": "#\n# DocumentRoot: The directory out of which you will serve your\n# documents. By default, all requests are taken from this directory, but\n# symbolic links and aliases may be used to point to other locations.\n#\nDocumentRoot \"/web\"",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/52",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Let's reload the httpd configuration:",
      "text": "Let's reload the httpd configuration:"
    },
    {
      "self_ref": "#/texts/53",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "systemctl reload httpd",
      "text": "systemctl reload httpd",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/54",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "And now we can add some amazing web content:",
      "text": "And now we can add some amazing web content:"
    },
    {
      "self_ref": "#/texts/55",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/web/index.html",
      "text": "/web/index.html",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/56",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "It's time to test our web server:",
      "text": "It's time to test our web server:"
    },
    {
      "self_ref": "#/texts/57",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "# curl -i localhost/index.html\nHTTP/1.1 403 Forbidden\nDate: Thu, 10 Sep 2015 12:54:19 GMT\nServer: Apache/2.4.16 (Fedora)\nContent-Length: 219\nContent-Type: text/html; charset=iso-8859-1",
      "text": "# curl -i localhost/index.html\nHTTP/1.1 403 Forbidden\nDate: Thu, 10 Sep 2015 12:54:19 GMT\nServer: Apache/2.4.16 (Fedora)\nContent-Length: 219\nContent-Type: text/html; charset=iso-8859-1",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/58",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Oh, come on. What's with this 403 error?",
      "text": "Oh, come on. What's with this 403 error?"
    },
    {
      "self_ref": "#/texts/59",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "section_header",
      "prov": [],
      "orig": "Investigating the 403",
      "text": "Investigating the 403",
      "level": 1
    },
    {
      "self_ref": "#/texts/60",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "The first step for any situation like this is to review some logs. Let's check the logs for httpd:",
      "text": "The first step for any situation like this is to review some logs. Let's check the logs for httpd:"
    },
    {
      "self_ref": "#/texts/61",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "[Thu Sep 10 12:55:04.541789 2015] [core:error] [pid 16597] (13)Permission denied: [client ::1:49860] AH00035: access to /index.html denied (filesystem path '/web/index.html') because search permissions are missing on a component of the path",
      "text": "[Thu Sep 10 12:55:04.541789 2015] [core:error] [pid 16597] (13)Permission denied: [client ::1:49860] AH00035: access to /index.html denied (filesystem path '/web/index.html') because search permissions are missing on a component of the path",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/62",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Search permissions are missing? What? Let's check the permissions on our web directory:",
      "text": "Search permissions are missing? What? Let's check the permissions on our web directory:"
    },
    {
      "self_ref": "#/texts/63",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "# ls -al /web\ntotal 12\ndrwxr-xr-x.  2 root root 4096 Sep 10 12:53 .\ndr-xr-xr-x. 19 root root 4096 Sep 10 12:51 ..\n-rw-r--r--.  1 root root   21 Sep 10 12:54 index.html",
      "text": "# ls -al /web\ntotal 12\ndrwxr-xr-x.  2 root root 4096 Sep 10 12:53 .\ndr-xr-xr-x. 19 root root 4096 Sep 10 12:51 ..\n-rw-r--r--.  1 root root   21 Sep 10 12:54 index.html",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/64",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "The httpd user has the ability to get into the directory (",
      "text": "The httpd user has the ability to get into the directory ("
    },
    {
      "self_ref": "#/texts/65",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "o+x",
      "text": "o+x",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/66",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " is set on ",
      "text": " is set on "
    },
    {
      "self_ref": "#/texts/67",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/web/",
      "text": "/web/",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/68",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ") and the httpd user can read the file (",
      "text": ") and the httpd user can read the file ("
    },
    {
      "self_ref": "#/texts/69",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "o+r",
      "text": "o+r",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/70",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " is set on ",
      "text": " is set on "
    },
    {
      "self_ref": "#/texts/71",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/web/index.html",
      "text": "/web/index.html",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/72",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "). Let's check the system journal just in case:",
      "text": "). Let's check the system journal just in case:"
    },
    {
      "self_ref": "#/texts/73",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "# journalctl -n 1 | tail\n-- Logs begin at Thu 2015-09-10 12:31:37 UTC, end at Thu 2015-09-10 12:55:04 UTC. --\nSep 10 12:55:04 fedora22 audit[16597]: <audit-1400> avc:  denied  { getattr } for  pid=16597 comm=\"httpd\" path=\"/web/index.html\" dev=\"xvda1\" ino=524290 scontext=system_u:system_r:httpd_t:s0 tcontext=unconfined_u:object_r:default_t:s0 tclass=file permissive=0",
      "text": "# journalctl -n 1 | tail\n-- Logs begin at Thu 2015-09-10 12:31:37 UTC, end at Thu 2015-09-10 12:55:04 UTC. --\nSep 10 12:55:04 fedora22 audit[16597]: <audit-1400> avc:  denied  { getattr } for  pid=16597 comm=\"httpd\" path=\"/web/index.html\" dev=\"xvda1\" ino=524290 scontext=system_u:system_r:httpd_t:s0 tcontext=unconfined_u:object_r:default_t:s0 tclass=file permissive=0",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/74",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "That's quite a long log line. Let's break it into pieces:",
      "text": "That's quite a long log line. Let's break it into pieces:"
    },
    {
      "self_ref": "#/texts/75",
      "parent": {
        "$ref": "#/groups/2"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "avc: denied { getattr } for pid=16597 comm=\"httpd\"",
      "text": "avc: denied { getattr } for pid=16597 comm=\"httpd\"",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/76",
      "parent": {
        "$ref": "#/groups/2"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "path=\"/web/index.html\" dev=\"xvda1\" ino=524290",
      "text": "path=\"/web/index.html\" dev=\"xvda1\" ino=524290",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/77",
      "parent": {
        "$ref": "#/groups/2"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "scontext=system_u:system_r:httpd_t:s0",
      "text": "scontext=system_u:system_r:httpd_t:s0",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/78",
      "parent": {
        "$ref": "#/groups/2"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "tcontext=unconfined_u:object_r:default_t:s0",
      "text": "tcontext=unconfined_u:object_r:default_t:s0",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/79",
      "parent": {
        "$ref": "#/groups/2"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "tclass=file",
      "text": "tclass=file",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/80",
      "parent": {
        "$ref": "#/groups/2"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "permissive=0",
      "text": "permissive=0",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/81",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Long story short, when httpd tried to access our ",
      "text": "Long story short, when httpd tried to access our "
    },
    {
      "self_ref": "#/texts/82",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/web/index.html",
      "text": "/web/index.html",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/83",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " file, the httpd process was labeled with ",
      "text": " file, the httpd process was labeled with "
    },
    {
      "self_ref": "#/texts/84",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "httpd_t",
      "text": "httpd_t",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/85",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ", but the kernel found that the HTML file was labeled with ",
      "text": ", but the kernel found that the HTML file was labeled with "
    },
    {
      "self_ref": "#/texts/86",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "default_t",
      "text": "default_t",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/87",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ". The httpd process (labeled with ",
      "text": ". The httpd process (labeled with "
    },
    {
      "self_ref": "#/texts/88",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "httpd_t",
      "text": "httpd_t",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/89",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ") isn't allowed to read files that are labeled as ",
      "text": ") isn't allowed to read files that are labeled as "
    },
    {
      "self_ref": "#/texts/90",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "default_t",
      "text": "default_t",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/91",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ", so the access is denied.",
      "text": ", so the access is denied."
    },
    {
      "self_ref": "#/texts/92",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "section_header",
      "prov": [],
      "orig": "Fixing it the right way",
      "text": "Fixing it the right way",
      "level": 1
    },
    {
      "self_ref": "#/texts/93",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Since we know what SELinux expects for this file (from the log line in the journal), we can apply the right context and re-test. The ",
      "text": "Since we know what SELinux expects for this file (from the log line in the journal), we can apply the right context and re-test. The "
    },
    {
      "self_ref": "#/texts/94",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "chcon",
      "text": "chcon",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/95",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " command has a handy argument that allows you to reference a file or directory, and apply the contexts from there. Since we know that ",
      "text": " command has a handy argument that allows you to reference a file or directory, and apply the contexts from there. Since we know that "
    },
    {
      "self_ref": "#/texts/96",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/var/www/html",
      "text": "/var/www/html",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/97",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " has the right contexts already, we can use it as a reference:",
      "text": " has the right contexts already, we can use it as a reference:"
    },
    {
      "self_ref": "#/texts/98",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "# chcon -v -R --reference=/var/www/html /web\nchanging security context of '/web/index.html'\nchanging security context of '/web'",
      "text": "# chcon -v -R --reference=/var/www/html /web\nchanging security context of '/web/index.html'\nchanging security context of '/web'",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/99",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Now we see some different contexts on ",
      "text": "Now we see some different contexts on "
    },
    {
      "self_ref": "#/texts/100",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/web",
      "text": "/web",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/101",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ":",
      "text": ":"
    },
    {
      "self_ref": "#/texts/102",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "# ls -alZ /web/\ntotal 12\ndrwxr-xr-x.  2 root root system_u:object_r:httpd_sys_content_t:s0 4096 Sep 10 13:19 .\ndr-xr-xr-x. 19 root root system_u:object_r:root_t:s0              4096 Sep 10 13:19 ..\n-rw-r--r--.  1 root root system_u:object_r:httpd_sys_content_t:s0   21 Sep 10 13:19 index.html",
      "text": "# ls -alZ /web/\ntotal 12\ndrwxr-xr-x.  2 root root system_u:object_r:httpd_sys_content_t:s0 4096 Sep 10 13:19 .\ndr-xr-xr-x. 19 root root system_u:object_r:root_t:s0              4096 Sep 10 13:19 ..\n-rw-r--r--.  1 root root system_u:object_r:httpd_sys_content_t:s0   21 Sep 10 13:19 index.html",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/103",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Let's test again:",
      "text": "Let's test again:"
    },
    {
      "self_ref": "#/texts/104",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "# curl -I localhost/index.html\nHTTP/1.1 403 Forbidden\nDate: Thu, 10 Sep 2015 13:21:22 GMT\nServer: Apache/2.4.16 (Fedora)\nContent-Type: text/html; charset=iso-8859-1",
      "text": "# curl -I localhost/index.html\nHTTP/1.1 403 Forbidden\nDate: Thu, 10 Sep 2015 13:21:22 GMT\nServer: Apache/2.4.16 (Fedora)\nContent-Type: text/html; charset=iso-8859-1",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/105",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Darn! What's in the httpd logs?",
      "text": "Darn! What's in the httpd logs?"
    },
    {
      "self_ref": "#/texts/106",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "[Thu Sep 10 13:21:22.267719 2015] [authz_core:error] [pid 16593] [client ::1:49861] AH01630: client denied by server configuration: /web/index.html",
      "text": "[Thu Sep 10 13:21:22.267719 2015] [authz_core:error] [pid 16593] [client ::1:49861] AH01630: client denied by server configuration: /web/index.html",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/107",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Ah, we cleared the SELinux problem but now httpd is upset. Just below the ",
      "text": "Ah, we cleared the SELinux problem but now httpd is upset. Just below the "
    },
    {
      "self_ref": "#/texts/108",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "DocumentRoot",
      "text": "DocumentRoot",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/109",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " line that we edited earlier, look for two ",
      "text": " line that we edited earlier, look for two "
    },
    {
      "self_ref": "#/texts/110",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "Directory",
      "text": "Directory",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/111",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " blocks. Change ",
      "text": " blocks. Change "
    },
    {
      "self_ref": "#/texts/112",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/var/www/",
      "text": "/var/www/",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/113",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " and ",
      "text": " and "
    },
    {
      "self_ref": "#/texts/114",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/var/www/html",
      "text": "/var/www/html",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/115",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " to ",
      "text": " to "
    },
    {
      "self_ref": "#/texts/116",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/web",
      "text": "/web",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/117",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " in those blocks. Reload the httpd configuration and try once more:",
      "text": " in those blocks. Reload the httpd configuration and try once more:"
    },
    {
      "self_ref": "#/texts/118",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "# systemctl reload httpd\n# curl -I localhost/index.html\nHTTP/1.1 200 OK\nDate: Thu, 10 Sep 2015 13:25:16 GMT\nServer: Apache/2.4.16 (Fedora)\nLast-Modified: Thu, 10 Sep 2015 13:19:47 GMT\nETag: \"15-51f6474064d50\"\nAccept-Ranges: bytes\nContent-Length: 21\nContent-Type: text/html; charset=UTF-8",
      "text": "# systemctl reload httpd\n# curl -I localhost/index.html\nHTTP/1.1 200 OK\nDate: Thu, 10 Sep 2015 13:25:16 GMT\nServer: Apache/2.4.16 (Fedora)\nLast-Modified: Thu, 10 Sep 2015 13:19:47 GMT\nETag: \"15-51f6474064d50\"\nAccept-Ranges: bytes\nContent-Length: 21\nContent-Type: text/html; charset=UTF-8",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/119",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Success!",
      "text": "Success!"
    },
    {
      "self_ref": "#/texts/120",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "section_header",
      "prov": [],
      "orig": "Long term fix",
      "text": "Long term fix",
      "level": 1
    },
    {
      "self_ref": "#/texts/121",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "The ",
      "text": "The "
    },
    {
      "self_ref": "#/texts/122",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "chcon",
      "text": "chcon",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/123",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " method is good for fixing one-off issues and for testing, but we need a good long term fix. SELinux has some file contexts already configured for certain directories, but not for our custom web directory. You can examine the defaults here:",
      "text": " method is good for fixing one-off issues and for testing, but we need a good long term fix. SELinux has some file contexts already configured for certain directories, but not for our custom web directory. You can examine the defaults here:"
    },
    {
      "self_ref": "#/texts/124",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "# semanage fcontext -l  | grep ^/var/www/html\n/var/www/html(/.*)?/sites/default/files(/.*)?      all files          system_u:object_r:httpd_sys_rw_content_t:s0\n/var/www/html(/.*)?/sites/default/settings\\.php    regular file       system_u:object_r:httpd_sys_rw_content_t:s0\n/var/www/html(/.*)?/uploads(/.*)?                  all files          system_u:object_r:httpd_sys_rw_content_t:s0\n/var/www/html(/.*)?/wp-content(/.*)?               all files          system_u:object_r:httpd_sys_rw_content_t:s0\n/var/www/html/[^/]*/cgi-bin(/.*)?                  all files          system_u:object_r:httpd_sys_script_exec_t:s0\n/var/www/html/cgi/munin.*                          all files          system_u:object_r:munin_script_exec_t:s0\n/var/www/html/configuration\\.php                   all files          system_u:object_r:httpd_sys_rw_content_t:s0\n/var/www/html/munin(/.*)?                          all files          system_u:object_r:munin_content_t:s0\n/var/www/html/munin/cgi(/.*)?                      all files          system_u:object_r:munin_script_exec_t:s0\n/var/www/html/owncloud/data(/.*)?                  all files          system_u:object_r:httpd_sys_rw_content_t:s0",
      "text": "# semanage fcontext -l  | grep ^/var/www/html\n/var/www/html(/.*)?/sites/default/files(/.*)?      all files          system_u:object_r:httpd_sys_rw_content_t:s0\n/var/www/html(/.*)?/sites/default/settings\\.php    regular file       system_u:object_r:httpd_sys_rw_content_t:s0\n/var/www/html(/.*)?/uploads(/.*)?                  all files          system_u:object_r:httpd_sys_rw_content_t:s0\n/var/www/html(/.*)?/wp-content(/.*)?               all files          system_u:object_r:httpd_sys_rw_content_t:s0\n/var/www/html/[^/]*/cgi-bin(/.*)?                  all files          system_u:object_r:httpd_sys_script_exec_t:s0\n/var/www/html/cgi/munin.*                          all files          system_u:object_r:munin_script_exec_t:s0\n/var/www/html/configuration\\.php                   all files          system_u:object_r:httpd_sys_rw_content_t:s0\n/var/www/html/munin(/.*)?                          all files          system_u:object_r:munin_content_t:s0\n/var/www/html/munin/cgi(/.*)?                      all files          system_u:object_r:munin_script_exec_t:s0\n/var/www/html/owncloud/data(/.*)?                  all files          system_u:object_r:httpd_sys_rw_content_t:s0",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/125",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "SELinux's tools have a concept of  equivalency . This allows you to say that one directory is  equivalent  to another one in the long term. We already used ",
      "text": "SELinux's tools have a concept of  equivalency . This allows you to say that one directory is  equivalent  to another one in the long term. We already used "
    },
    {
      "self_ref": "#/texts/126",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "chcon",
      "text": "chcon",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/127",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " to apply contexts with a reference to a directory with valid contexts, but this equivalency concept gives us a longer term fix. Here's the command to use:",
      "text": " to apply contexts with a reference to a directory with valid contexts, but this equivalency concept gives us a longer term fix. Here's the command to use:"
    },
    {
      "self_ref": "#/texts/128",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "semanage fcontext --add --equal /var/www /web",
      "text": "semanage fcontext --add --equal /var/www /web",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/129",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "If we break this down, we're saying we want to add a new file context where ",
      "text": "If we break this down, we're saying we want to add a new file context where "
    },
    {
      "self_ref": "#/texts/130",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/web",
      "text": "/web",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/131",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " is equal to ",
      "text": " is equal to "
    },
    {
      "self_ref": "#/texts/132",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/var/www",
      "text": "/var/www",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/133",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ". This means we want the same SELinux contexts applied in the same places and want them treated equally. After running the ",
      "text": ". This means we want the same SELinux contexts applied in the same places and want them treated equally. After running the "
    },
    {
      "self_ref": "#/texts/134",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "semanage",
      "text": "semanage",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/135",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " command, let's make an ",
      "text": " command, let's make an "
    },
    {
      "self_ref": "#/texts/136",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "index2.html",
      "text": "index2.html",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/137",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " file to test:",
      "text": " file to test:"
    },
    {
      "self_ref": "#/texts/138",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/web/index2.html\n# curl -I localhost/index2.html\nHTTP/1.1 200 OK\nDate: Thu, 10 Sep 2015 13:35:24 GMT\nServer: Apache/2.4.16 (Fedora)\nLast-Modified: Thu, 10 Sep 2015 13:34:11 GMT\nETag: \"15-51f64a78266c8\"\nAccept-Ranges: bytes\nContent-Length: 21\nContent-Type: text/html; charset=UTF-8",
      "text": "/web/index2.html\n# curl -I localhost/index2.html\nHTTP/1.1 200 OK\nDate: Thu, 10 Sep 2015 13:35:24 GMT\nServer: Apache/2.4.16 (Fedora)\nLast-Modified: Thu, 10 Sep 2015 13:34:11 GMT\nETag: \"15-51f64a78266c8\"\nAccept-Ranges: bytes\nContent-Length: 21\nContent-Type: text/html; charset=UTF-8",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/139",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Great! We didn't have to use ",
      "text": "Great! We didn't have to use "
    },
    {
      "self_ref": "#/texts/140",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "chcon",
      "text": "chcon",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/141",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " this time around because we configured ",
      "text": " this time around because we configured "
    },
    {
      "self_ref": "#/texts/142",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/web",
      "text": "/web",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/143",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " as an equivalent directory to ",
      "text": " as an equivalent directory to "
    },
    {
      "self_ref": "#/texts/144",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/var/www",
      "text": "/var/www",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/145",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ". Let's double check the contexts:",
      "text": ". Let's double check the contexts:"
    },
    {
      "self_ref": "#/texts/146",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "# ls -alZ /web\ntotal 16\ndrwxr-xr-x.  2 root root unconfined_u:object_r:httpd_sys_content_t:s0 4096 Sep 10 13:34 .\ndr-xr-xr-x. 19 root root system_u:object_r:root_t:s0                  4096 Sep 10 13:33 ..\n-rw-r--r--.  1 root root unconfined_u:object_r:httpd_sys_content_t:s0   21 Sep 10 13:34 index2.html\n-rw-r--r--.  1 root root unconfined_u:object_r:httpd_sys_content_t:s0   21 Sep 10 13:33 index.html",
      "text": "# ls -alZ /web\ntotal 16\ndrwxr-xr-x.  2 root root unconfined_u:object_r:httpd_sys_content_t:s0 4096 Sep 10 13:34 .\ndr-xr-xr-x. 19 root root system_u:object_r:root_t:s0                  4096 Sep 10 13:33 ..\n-rw-r--r--.  1 root root unconfined_u:object_r:httpd_sys_content_t:s0   21 Sep 10 13:34 index2.html\n-rw-r--r--.  1 root root unconfined_u:object_r:httpd_sys_content_t:s0   21 Sep 10 13:33 index.html",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/147",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Perfect! We now have all of the security benefits of SELinux in a completely custom web directory.",
      "text": "Perfect! We now have all of the security benefits of SELinux in a completely custom web directory."
    }
  ],
  "pictures": [
    {
      "self_ref": "#/pictures/0",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "picture",
      "prov": [],
      "captions": [],
      "references": [],
      "footnotes": [],
      "annotations": []
    }
  ],
  "tables": [],
  "key_value_items": [],
  "form_items": [],
  "pages": {}
}