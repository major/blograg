{
  "schema_name": "DoclingDocument",
  "version": "1.4.0",
  "name": "myfile",
  "origin": {
    "mimetype": "text/markdown",
    "binary_hash": 1731546695136518146,
    "filename": "myfile.md"
  },
  "furniture": {
    "self_ref": "#/furniture",
    "children": [],
    "content_layer": "furniture",
    "name": "_root_",
    "label": "unspecified"
  },
  "body": {
    "self_ref": "#/body",
    "children": [
      {
        "$ref": "#/texts/0"
      },
      {
        "$ref": "#/texts/1"
      },
      {
        "$ref": "#/texts/2"
      },
      {
        "$ref": "#/texts/3"
      },
      {
        "$ref": "#/texts/4"
      },
      {
        "$ref": "#/texts/5"
      },
      {
        "$ref": "#/texts/6"
      },
      {
        "$ref": "#/texts/7"
      },
      {
        "$ref": "#/texts/8"
      },
      {
        "$ref": "#/texts/9"
      },
      {
        "$ref": "#/texts/10"
      },
      {
        "$ref": "#/texts/11"
      },
      {
        "$ref": "#/texts/12"
      },
      {
        "$ref": "#/texts/13"
      },
      {
        "$ref": "#/texts/14"
      },
      {
        "$ref": "#/texts/15"
      },
      {
        "$ref": "#/texts/16"
      },
      {
        "$ref": "#/texts/17"
      },
      {
        "$ref": "#/texts/18"
      },
      {
        "$ref": "#/texts/19"
      },
      {
        "$ref": "#/texts/20"
      },
      {
        "$ref": "#/texts/21"
      },
      {
        "$ref": "#/texts/22"
      },
      {
        "$ref": "#/texts/23"
      },
      {
        "$ref": "#/texts/24"
      },
      {
        "$ref": "#/texts/25"
      },
      {
        "$ref": "#/texts/26"
      },
      {
        "$ref": "#/texts/27"
      },
      {
        "$ref": "#/texts/28"
      },
      {
        "$ref": "#/texts/29"
      },
      {
        "$ref": "#/texts/30"
      },
      {
        "$ref": "#/texts/31"
      },
      {
        "$ref": "#/texts/32"
      },
      {
        "$ref": "#/texts/33"
      },
      {
        "$ref": "#/texts/34"
      },
      {
        "$ref": "#/groups/0"
      },
      {
        "$ref": "#/texts/36"
      },
      {
        "$ref": "#/groups/1"
      },
      {
        "$ref": "#/texts/38"
      },
      {
        "$ref": "#/texts/39"
      },
      {
        "$ref": "#/texts/40"
      },
      {
        "$ref": "#/texts/41"
      },
      {
        "$ref": "#/texts/42"
      },
      {
        "$ref": "#/texts/43"
      },
      {
        "$ref": "#/texts/44"
      },
      {
        "$ref": "#/texts/45"
      },
      {
        "$ref": "#/texts/46"
      },
      {
        "$ref": "#/texts/47"
      },
      {
        "$ref": "#/texts/48"
      },
      {
        "$ref": "#/texts/49"
      },
      {
        "$ref": "#/texts/50"
      },
      {
        "$ref": "#/texts/51"
      },
      {
        "$ref": "#/texts/52"
      },
      {
        "$ref": "#/texts/53"
      },
      {
        "$ref": "#/texts/54"
      },
      {
        "$ref": "#/texts/55"
      },
      {
        "$ref": "#/texts/56"
      },
      {
        "$ref": "#/texts/57"
      },
      {
        "$ref": "#/texts/58"
      },
      {
        "$ref": "#/texts/59"
      },
      {
        "$ref": "#/texts/60"
      },
      {
        "$ref": "#/texts/61"
      },
      {
        "$ref": "#/texts/62"
      },
      {
        "$ref": "#/texts/63"
      },
      {
        "$ref": "#/texts/64"
      },
      {
        "$ref": "#/texts/65"
      }
    ],
    "content_layer": "body",
    "name": "_root_",
    "label": "unspecified"
  },
  "groups": [
    {
      "self_ref": "#/groups/0",
      "parent": {
        "$ref": "#/body"
      },
      "children": [
        {
          "$ref": "#/texts/35"
        }
      ],
      "content_layer": "body",
      "name": "list",
      "label": "ordered_list"
    },
    {
      "self_ref": "#/groups/1",
      "parent": {
        "$ref": "#/body"
      },
      "children": [
        {
          "$ref": "#/texts/37"
        }
      ],
      "content_layer": "body",
      "name": "list",
      "label": "ordered_list"
    }
  ],
  "texts": [
    {
      "self_ref": "#/texts/0",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Kubernetes offers a plethora of  storage options  for mounting volumes in pods, and NFS is included. I have a Synology NAS at home and some of my pods in my home kubernetes deployment need access to files via NFS.",
      "text": "Kubernetes offers a plethora of  storage options  for mounting volumes in pods, and NFS is included. I have a Synology NAS at home and some of my pods in my home kubernetes deployment need access to files via NFS."
    },
    {
      "self_ref": "#/texts/1",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Although the Kubernetes documentation has a  bunch of examples  about setting up NFS mounts, I ended up being more confused than when I started. This post covers a simple example that you can copy, adapt, and paste as needed.",
      "text": "Although the Kubernetes documentation has a  bunch of examples  about setting up NFS mounts, I ended up being more confused than when I started. This post covers a simple example that you can copy, adapt, and paste as needed."
    },
    {
      "self_ref": "#/texts/2",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "title",
      "prov": [],
      "orig": "Verify that NFS is working",
      "text": "Verify that NFS is working"
    },
    {
      "self_ref": "#/texts/3",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "NFS can be tricky to get right and it's important to verify that it's working  outside of kubernetes  before you try mounting it in a pod. Trust me -- NFS looks quite simple at first glance but you can get confused quickly. Test out the easiest stuff first.",
      "text": "NFS can be tricky to get right and it's important to verify that it's working  outside of kubernetes  before you try mounting it in a pod. Trust me -- NFS looks quite simple at first glance but you can get confused quickly. Test out the easiest stuff first."
    },
    {
      "self_ref": "#/texts/4",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "As an example: Synology made some recent changes to their NFS configuration where you must specify shares with a netmask (",
      "text": "As an example: Synology made some recent changes to their NFS configuration where you must specify shares with a netmask ("
    },
    {
      "self_ref": "#/texts/5",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "192.168.10.0/255.255.255.0",
      "text": "192.168.10.0/255.255.255.0",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/6",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ") or in CIDR notation (",
      "text": ") or in CIDR notation ("
    },
    {
      "self_ref": "#/texts/7",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "192.168.10.0/24",
      "text": "192.168.10.0/24",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/8",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "). That took me a while to figure out going back and forth from server to client and back again.",
      "text": "). That took me a while to figure out going back and forth from server to client and back again."
    },
    {
      "self_ref": "#/texts/9",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "If you're making your shares from a regular Linux server, refer to the  Arch Linux NFS documentation . It's one of the best write-ups on NFS around!",
      "text": "If you're making your shares from a regular Linux server, refer to the  Arch Linux NFS documentation . It's one of the best write-ups on NFS around!"
    },
    {
      "self_ref": "#/texts/10",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "First, I verified that the mount is showing up via ",
      "text": "First, I verified that the mount is showing up via "
    },
    {
      "self_ref": "#/texts/11",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "showmount",
      "text": "showmount",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/12",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ":",
      "text": ":"
    },
    {
      "self_ref": "#/texts/13",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "$ showmount -e 192.168.10.60\nExport list for 192.168.10.60:\n/volume1/media 192.168.10.50/32",
      "text": "$ showmount -e 192.168.10.60\nExport list for 192.168.10.60:\n/volume1/media 192.168.10.50/32",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/14",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "My NFS server is on ",
      "text": "My NFS server is on "
    },
    {
      "self_ref": "#/texts/15",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "192.168.10.60",
      "text": "192.168.10.60",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/16",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " and my NFS client (running kubernetes) is on",
      "text": " and my NFS client (running kubernetes) is on"
    },
    {
      "self_ref": "#/texts/17",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "192.168.10.50",
      "text": "192.168.10.50",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/18",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ".",
      "text": "."
    },
    {
      "self_ref": "#/texts/19",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "\ud83e\udd14 Got an error or can't see any exports? Double check the IP addresses allowed to access the share on the server side and verify your client machine's IP address.",
      "text": "\ud83e\udd14 Got an error or can't see any exports? Double check the IP addresses allowed to access the share on the server side and verify your client machine's IP address."
    },
    {
      "self_ref": "#/texts/20",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "\u261d\ud83c\udffb Remember to re-export your shares on the server with ",
      "text": "\u261d\ud83c\udffb Remember to re-export your shares on the server with "
    },
    {
      "self_ref": "#/texts/21",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "exportfs -arv",
      "text": "exportfs -arv",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/22",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " if you made changes! The NFS server won't pick them up automatically. Display your currently running exports with ",
      "text": " if you made changes! The NFS server won't pick them up automatically. Display your currently running exports with "
    },
    {
      "self_ref": "#/texts/23",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "exportfs -v",
      "text": "exportfs -v",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/24",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ".",
      "text": "."
    },
    {
      "self_ref": "#/texts/25",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Let's try mounting the share next:",
      "text": "Let's try mounting the share next:"
    },
    {
      "self_ref": "#/texts/26",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "$ sudo mount -t nfs 192.168.10.60:/volume1/media /tmp/test\n$ df -hT /tmp/test\nFilesystem                   Type  Size  Used Avail Use% Mounted on\n192.168.10.60:/volume1/media nfs4   16T  7.5T  8.3T  48% /tmp/test",
      "text": "$ sudo mount -t nfs 192.168.10.60:/volume1/media /tmp/test\n$ df -hT /tmp/test\nFilesystem                   Type  Size  Used Avail Use% Mounted on\n192.168.10.60:/volume1/media nfs4   16T  7.5T  8.3T  48% /tmp/test",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/27",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Awesome! \ud83c\udf89",
      "text": "Awesome! \ud83c\udf89"
    },
    {
      "self_ref": "#/texts/28",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Unmount the test:",
      "text": "Unmount the test:"
    },
    {
      "self_ref": "#/texts/29",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "$ sudo umount /tmp/test",
      "text": "$ sudo umount /tmp/test",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/30",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "title",
      "prov": [],
      "orig": "Mount NFS in a pod",
      "text": "Mount NFS in a pod"
    },
    {
      "self_ref": "#/texts/31",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "First off, we need a deployment where we can mount up an NFS share. I decided to take a Fedora 35 container and create a really basic deployment:",
      "text": "First off, we need a deployment where we can mount up an NFS share. I decided to take a Fedora 35 container and create a really basic deployment:"
    },
    {
      "self_ref": "#/texts/32",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: fedoratest\n  name: fedoratest\n  namespace: fedoratest\nspec:\n  template:\n    spec:\n      containers:\n        - image: registry.fedoraproject.org/fedora:35\n          name: fedora\n          command: [\"/bin/bash\", \"-c\", \"--\"]\n          args: [\"while true; do sleep 30; done;\"]",
      "text": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: fedoratest\n  name: fedoratest\n  namespace: fedoratest\nspec:\n  template:\n    spec:\n      containers:\n        - image: registry.fedoraproject.org/fedora:35\n          name: fedora\n          command: [\"/bin/bash\", \"-c\", \"--\"]\n          args: [\"while true; do sleep 30; done;\"]",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/33",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "This is a really silly deployment that causes Fedora to sleep forever until someone stops the pod. I mainly want something that I can shell into and ensure NFS is working.",
      "text": "This is a really silly deployment that causes Fedora to sleep forever until someone stops the pod. I mainly want something that I can shell into and ensure NFS is working."
    },
    {
      "self_ref": "#/texts/34",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Now we need to add two pieces to the deployment:",
      "text": "Now we need to add two pieces to the deployment:"
    },
    {
      "self_ref": "#/texts/35",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "An NFS volume:",
      "text": "An NFS volume:",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/36",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "volumes:\n  - name: nfs-vol\n    nfs:\n      server: 192.168.10.60\n      path: /volume1/media",
      "text": "volumes:\n  - name: nfs-vol\n    nfs:\n      server: 192.168.10.60\n      path: /volume1/media",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/37",
      "parent": {
        "$ref": "#/groups/1"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "A path to mount the volume",
      "text": "A path to mount the volume",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/38",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "volumeMounts:\n  - name: nfs-vol\n    mountPath: /opt/nfs",
      "text": "volumeMounts:\n  - name: nfs-vol\n    mountPath: /opt/nfs",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/39",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "When we add in those NFS pieces, we get the following deployment:",
      "text": "When we add in those NFS pieces, we get the following deployment:"
    },
    {
      "self_ref": "#/texts/40",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: fedoratest\n  name: fedoratest\n  namespace: fedoratest\nspec:\n  template:\n    spec:\n      containers:\n        - image: registry.fedoraproject.org/fedora:35\n          name: fedora\n          command: [\"/bin/bash\", \"-c\", \"--\"]\n          args: [\"while true; do sleep 30; done;\"]\n          volumeMounts:\n            - name: nfs-vol\n              mountPath: /opt/nfs\n      volumes:\n        - name: nfs-vol\n          nfs:\n            server: 192.168.10.60\n            path: /volume1/media",
      "text": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: fedoratest\n  name: fedoratest\n  namespace: fedoratest\nspec:\n  template:\n    spec:\n      containers:\n        - image: registry.fedoraproject.org/fedora:35\n          name: fedora\n          command: [\"/bin/bash\", \"-c\", \"--\"]\n          args: [\"while true; do sleep 30; done;\"]\n          volumeMounts:\n            - name: nfs-vol\n              mountPath: /opt/nfs\n      volumes:\n        - name: nfs-vol\n          nfs:\n            server: 192.168.10.60\n            path: /volume1/media",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/41",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Save that as ",
      "text": "Save that as "
    },
    {
      "self_ref": "#/texts/42",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "fedoratest.yaml",
      "text": "fedoratest.yaml",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/43",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " and apply it:",
      "text": " and apply it:"
    },
    {
      "self_ref": "#/texts/44",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "$ kubectl apply -f fedoratest.yaml",
      "text": "$ kubectl apply -f fedoratest.yaml",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/45",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Let's see if the volume worked:",
      "text": "Let's see if the volume worked:"
    },
    {
      "self_ref": "#/texts/46",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "$ kubectl describe -n fedoratest deployment/fedoratest\n\u2702\n  Volumes:\n   nfs-vol:\n    Type:      NFS (an NFS mount that lasts the lifetime of a pod)\n    Server:    192.168.10.60\n    Path:      /volume1/media\n    ReadOnly:  false\n\u2702",
      "text": "$ kubectl describe -n fedoratest deployment/fedoratest\n\u2702\n  Volumes:\n   nfs-vol:\n    Type:      NFS (an NFS mount that lasts the lifetime of a pod)\n    Server:    192.168.10.60\n    Path:      /volume1/media\n    ReadOnly:  false\n\u2702",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/47",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Now let's have a look at it inside the container itself:",
      "text": "Now let's have a look at it inside the container itself:"
    },
    {
      "self_ref": "#/texts/48",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "$ kubectl -n fedoratest exec -it deployment/fedoratest -- sh\nsh-5.1$ cd /opt/nfs\nsh-5.1$ ls\ndir1  dir2  dir3",
      "text": "$ kubectl -n fedoratest exec -it deployment/fedoratest -- sh\nsh-5.1$ cd /opt/nfs\nsh-5.1$ ls\ndir1  dir2  dir3",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/49",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Let's ensure we can write files:",
      "text": "Let's ensure we can write files:"
    },
    {
      "self_ref": "#/texts/50",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "sh-5.1$ touch doot\nsh-5.1$ ls -al doot\n-rwxrwxrwx. 1 root root 0 Apr  8 21:03 doot\nsh-5.1$ rm doot",
      "text": "sh-5.1$ touch doot\nsh-5.1$ ls -al doot\n-rwxrwxrwx. 1 root root 0 Apr  8 21:03 doot\nsh-5.1$ rm doot",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/51",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "I can write files, but writing them as root causes problems for other applications. In this case, my NFS server uses UID ",
      "text": "I can write files, but writing them as root causes problems for other applications. In this case, my NFS server uses UID "
    },
    {
      "self_ref": "#/texts/52",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "1035",
      "text": "1035",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/53",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " for my user and GID ",
      "text": " for my user and GID "
    },
    {
      "self_ref": "#/texts/54",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "100",
      "text": "100",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/55",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " for my group. Lucky for us, we can set this up within our deployment configuration using ",
      "text": " for my group. Lucky for us, we can set this up within our deployment configuration using "
    },
    {
      "self_ref": "#/texts/56",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "securityContext",
      "text": "securityContext",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/57",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ":",
      "text": ":"
    },
    {
      "self_ref": "#/texts/58",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: fedoratest\n  name: fedoratest\n  namespace: fedoratest\nspec:\n  template:\n    spec:\n      securityContext:\n        runAsUser: 1035  # Use my UID on the NFS server\n        runAsGroup: 100  # Use my GID on the NFS server\n      containers:\n        - image: registry.fedoraproject.org/fedora:35\n          name: fedora\n          command: [\"/bin/bash\", \"-c\", \"--\"]\n          args: [\"while true; do sleep 30; done;\"]\n          volumeMounts:\n            - name: nfs-vol\n              mountPath: /opt/nfs\n      volumes:\n        - name: nfs-vol\n          nfs:\n            server: 192.168.10.60\n            path: /volume1/media",
      "text": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: fedoratest\n  name: fedoratest\n  namespace: fedoratest\nspec:\n  template:\n    spec:\n      securityContext:\n        runAsUser: 1035  # Use my UID on the NFS server\n        runAsGroup: 100  # Use my GID on the NFS server\n      containers:\n        - image: registry.fedoraproject.org/fedora:35\n          name: fedora\n          command: [\"/bin/bash\", \"-c\", \"--\"]\n          args: [\"while true; do sleep 30; done;\"]\n          volumeMounts:\n            - name: nfs-vol\n              mountPath: /opt/nfs\n      volumes:\n        - name: nfs-vol\n          nfs:\n            server: 192.168.10.60\n            path: /volume1/media",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/59",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Apply this change:",
      "text": "Apply this change:"
    },
    {
      "self_ref": "#/texts/60",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "$ kubectl apply -f fedoratest.yaml",
      "text": "$ kubectl apply -f fedoratest.yaml",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/61",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Now try to write a file again:",
      "text": "Now try to write a file again:"
    },
    {
      "self_ref": "#/texts/62",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "$ kubectl -n fedoratest exec -it deployment/fedoratest -- sh\nsh-5.1$ touch doot\nsh-5.1$ ls -al doot\n-rwxrwxrwx. 1 1035 100 0 Apr  8 21:08 doot\nsh-5.1$ rm doot",
      "text": "$ kubectl -n fedoratest exec -it deployment/fedoratest -- sh\nsh-5.1$ touch doot\nsh-5.1$ ls -al doot\n-rwxrwxrwx. 1 1035 100 0 Apr  8 21:08 doot\nsh-5.1$ rm doot",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/63",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Perfect! Now files are owned by the correct UID and GID.",
      "text": "Perfect! Now files are owned by the correct UID and GID."
    },
    {
      "self_ref": "#/texts/64",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "section_header",
      "prov": [],
      "orig": "Extra credit",
      "text": "Extra credit",
      "level": 1
    },
    {
      "self_ref": "#/texts/65",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "If you plan to have plenty of pods mounting storage from the same NFS server, you might want to consider building out a persistent volume first and then making claims from it. The kubernetes examples repository has a good example of a  persistent NFS volume  and a persistent volume claim  made from that volume.",
      "text": "If you plan to have plenty of pods mounting storage from the same NFS server, you might want to consider building out a persistent volume first and then making claims from it. The kubernetes examples repository has a good example of a  persistent NFS volume  and a persistent volume claim  made from that volume."
    }
  ],
  "pictures": [],
  "tables": [],
  "key_value_items": [],
  "form_items": [],
  "pages": {}
}