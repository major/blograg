{
  "schema_name": "DoclingDocument",
  "version": "1.4.0",
  "name": "myfile",
  "origin": {
    "mimetype": "text/markdown",
    "binary_hash": 11194048133074631500,
    "filename": "myfile.md"
  },
  "furniture": {
    "self_ref": "#/furniture",
    "children": [],
    "content_layer": "furniture",
    "name": "_root_",
    "label": "unspecified"
  },
  "body": {
    "self_ref": "#/body",
    "children": [
      {
        "$ref": "#/texts/0"
      },
      {
        "$ref": "#/texts/1"
      },
      {
        "$ref": "#/texts/2"
      },
      {
        "$ref": "#/texts/3"
      },
      {
        "$ref": "#/texts/4"
      },
      {
        "$ref": "#/texts/5"
      },
      {
        "$ref": "#/texts/6"
      },
      {
        "$ref": "#/texts/7"
      },
      {
        "$ref": "#/texts/8"
      },
      {
        "$ref": "#/texts/9"
      },
      {
        "$ref": "#/texts/10"
      },
      {
        "$ref": "#/texts/11"
      },
      {
        "$ref": "#/texts/12"
      },
      {
        "$ref": "#/texts/13"
      },
      {
        "$ref": "#/texts/14"
      },
      {
        "$ref": "#/texts/15"
      },
      {
        "$ref": "#/texts/16"
      },
      {
        "$ref": "#/texts/17"
      },
      {
        "$ref": "#/texts/18"
      },
      {
        "$ref": "#/texts/19"
      },
      {
        "$ref": "#/texts/20"
      },
      {
        "$ref": "#/texts/21"
      },
      {
        "$ref": "#/texts/22"
      },
      {
        "$ref": "#/texts/23"
      },
      {
        "$ref": "#/texts/24"
      },
      {
        "$ref": "#/texts/25"
      },
      {
        "$ref": "#/texts/26"
      },
      {
        "$ref": "#/texts/27"
      },
      {
        "$ref": "#/texts/28"
      },
      {
        "$ref": "#/texts/29"
      },
      {
        "$ref": "#/texts/30"
      },
      {
        "$ref": "#/texts/31"
      },
      {
        "$ref": "#/texts/32"
      },
      {
        "$ref": "#/texts/33"
      },
      {
        "$ref": "#/texts/34"
      },
      {
        "$ref": "#/texts/35"
      },
      {
        "$ref": "#/texts/36"
      },
      {
        "$ref": "#/texts/37"
      },
      {
        "$ref": "#/texts/38"
      },
      {
        "$ref": "#/texts/39"
      },
      {
        "$ref": "#/texts/40"
      },
      {
        "$ref": "#/texts/41"
      },
      {
        "$ref": "#/texts/42"
      },
      {
        "$ref": "#/texts/43"
      },
      {
        "$ref": "#/texts/44"
      },
      {
        "$ref": "#/texts/45"
      },
      {
        "$ref": "#/texts/46"
      },
      {
        "$ref": "#/texts/47"
      },
      {
        "$ref": "#/texts/48"
      },
      {
        "$ref": "#/texts/49"
      },
      {
        "$ref": "#/texts/50"
      }
    ],
    "content_layer": "body",
    "name": "_root_",
    "label": "unspecified"
  },
  "groups": [],
  "texts": [
    {
      "self_ref": "#/texts/0",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Over the past two years, I picked up stock trading and general finance knowledge as a hobby. There are plenty of things I enjoy here: complex math, understanding trends, and making educated guesses on what happens next. Getting the right tools makes this job a little bit easier.",
      "text": "Over the past two years, I picked up stock trading and general finance knowledge as a hobby. There are plenty of things I enjoy here: complex math, understanding trends, and making educated guesses on what happens next. Getting the right tools makes this job a little bit easier."
    },
    {
      "self_ref": "#/texts/1",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "I use  TD Ameritrade  for the majority of my trading and learning. They offer a desktop application with a great name:  ThinkOrSwim . Using it feels a bit like flying the Space Shuttle at first, but it delivers tons of information and analysis in a small package.",
      "text": "I use  TD Ameritrade  for the majority of my trading and learning. They offer a desktop application with a great name:  ThinkOrSwim . Using it feels a bit like flying the Space Shuttle at first, but it delivers tons of information and analysis in a small package."
    },
    {
      "self_ref": "#/texts/2",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "This post isn't about stock trading -- it's about how to wrestle ThinkOrSwim onto a Fedora Linux machine and get everything working as it should. \ud83d\udc27",
      "text": "This post isn't about stock trading -- it's about how to wrestle ThinkOrSwim onto a Fedora Linux machine and get everything working as it should. \ud83d\udc27"
    },
    {
      "self_ref": "#/texts/3",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "section_header",
      "prov": [],
      "orig": "Getting (the right) Java",
      "text": "Getting (the right) Java",
      "level": 1
    },
    {
      "self_ref": "#/texts/4",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "ThinkOrSwim's download page  mentions installing Zulu OpenJDK 11 first. This is a special certified release of the JDK that is well-tested with ThinkOrSwim.",
      "text": "ThinkOrSwim's download page  mentions installing Zulu OpenJDK 11 first. This is a special certified release of the JDK that is well-tested with ThinkOrSwim."
    },
    {
      "self_ref": "#/texts/5",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Visit the  RPM-based Linux  page for Azul's OpenJDK and follow the steps they provide:",
      "text": "Visit the  RPM-based Linux  page for Azul's OpenJDK and follow the steps they provide:"
    },
    {
      "self_ref": "#/texts/6",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "$ sudo dnf install -y https://cdn.azul.com/zulu/bin/zulu-repo-1.0.0-1.noarch.rpm\n$ sudo dnf install zulu11-jdk",
      "text": "$ sudo dnf install -y https://cdn.azul.com/zulu/bin/zulu-repo-1.0.0-1.noarch.rpm\n$ sudo dnf install zulu11-jdk",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/7",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "If you already have a JDK installed, you'll need to switch to the Azul JDK as the primary one. I have some other Java applications on my desktop and they seem to work just fine with this JDK. We will use the ",
      "text": "If you already have a JDK installed, you'll need to switch to the Azul JDK as the primary one. I have some other Java applications on my desktop and they seem to work just fine with this JDK. We will use the "
    },
    {
      "self_ref": "#/texts/8",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "alternatives",
      "text": "alternatives",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/9",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " script to manage the symlinks for our default JDK:",
      "text": " script to manage the symlinks for our default JDK:"
    },
    {
      "self_ref": "#/texts/10",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "$ sudo alternatives --config java\n\nThere are 2 programs which provide 'java'.\n\n  Selection    Command\n-----------------------------------------------\n*+ 1           java-17-openjdk.x86_64 (/usr/lib/jvm/java-17-openjdk-17.0.2.0.8-7.fc36.x86_64/bin/java)\n   2           /usr/lib/jvm/zulu11/bin/java\n\nEnter to keep the current selection[+], or type selection number:",
      "text": "$ sudo alternatives --config java\n\nThere are 2 programs which provide 'java'.\n\n  Selection    Command\n-----------------------------------------------\n*+ 1           java-17-openjdk.x86_64 (/usr/lib/jvm/java-17-openjdk-17.0.2.0.8-7.fc36.x86_64/bin/java)\n   2           /usr/lib/jvm/zulu11/bin/java\n\nEnter to keep the current selection[+], or type selection number:",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/11",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Press ",
      "text": "Press "
    },
    {
      "self_ref": "#/texts/12",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "2",
      "text": "2",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/13",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " here and then press ENTER. Double check that the Azul JDK is the primary:",
      "text": " here and then press ENTER. Double check that the Azul JDK is the primary:"
    },
    {
      "self_ref": "#/texts/14",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "$ java --version\nopenjdk 11.0.14.1 2022-02-08 LTS\nOpenJDK Runtime Environment Zulu11.54+25-CA (build 11.0.14.1+1-LTS)\nOpenJDK 64-Bit Server VM Zulu11.54+25-CA (build 11.0.14.1+1-LTS, mixed mode)",
      "text": "$ java --version\nopenjdk 11.0.14.1 2022-02-08 LTS\nOpenJDK Runtime Environment Zulu11.54+25-CA (build 11.0.14.1+1-LTS)\nOpenJDK 64-Bit Server VM Zulu11.54+25-CA (build 11.0.14.1+1-LTS, mixed mode)",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/15",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "section_header",
      "prov": [],
      "orig": "Adding ALSA support",
      "text": "Adding ALSA support",
      "level": 1
    },
    {
      "self_ref": "#/texts/16",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Yes, we are going back in time and getting ThinkOrSwim talking with ALSA. We will need",
      "text": "Yes, we are going back in time and getting ThinkOrSwim talking with ALSA. We will need"
    },
    {
      "self_ref": "#/texts/17",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "libasound_module_pcm_pulse.so",
      "text": "libasound_module_pcm_pulse.so",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/18",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " on the system:",
      "text": " on the system:"
    },
    {
      "self_ref": "#/texts/19",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "$ sudo dnf whatprovides '*/libasound_module_pcm_pulse.so'\nLast metadata expiration check: 3:09:00 ago on Thu 31 Mar 2022 11:14:57 AM CDT.\nalsa-plugins-pulseaudio-1.2.6-2.fc36.i686 : Alsa to PulseAudio backend\nRepo        : fedora\nMatched from:\nFilename    : /usr/lib/alsa-lib/libasound_module_pcm_pulse.so\n\nalsa-plugins-pulseaudio-1.2.6-2.fc36.x86_64 : Alsa to PulseAudio backend\nRepo        : @System\nMatched from:\nFilename    : /usr/lib64/alsa-lib/libasound_module_pcm_pulse.so\n\nalsa-plugins-pulseaudio-1.2.6-2.fc36.x86_64 : Alsa to PulseAudio backend\nRepo        : fedora\nMatched from:\nFilename    : /usr/lib64/alsa-lib/libasound_module_pcm_pulse.so\n\n$ sudo dnf install alsa-plugins-pulseaudio",
      "text": "$ sudo dnf whatprovides '*/libasound_module_pcm_pulse.so'\nLast metadata expiration check: 3:09:00 ago on Thu 31 Mar 2022 11:14:57 AM CDT.\nalsa-plugins-pulseaudio-1.2.6-2.fc36.i686 : Alsa to PulseAudio backend\nRepo        : fedora\nMatched from:\nFilename    : /usr/lib/alsa-lib/libasound_module_pcm_pulse.so\n\nalsa-plugins-pulseaudio-1.2.6-2.fc36.x86_64 : Alsa to PulseAudio backend\nRepo        : @System\nMatched from:\nFilename    : /usr/lib64/alsa-lib/libasound_module_pcm_pulse.so\n\nalsa-plugins-pulseaudio-1.2.6-2.fc36.x86_64 : Alsa to PulseAudio backend\nRepo        : fedora\nMatched from:\nFilename    : /usr/lib64/alsa-lib/libasound_module_pcm_pulse.so\n\n$ sudo dnf install alsa-plugins-pulseaudio",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/20",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Now that we have ALSA support, let's move on to configuring the JDK to use it properly. Keith Packard  ran into sound problems in Ubuntu  and fixed it with a small change to his ",
      "text": "Now that we have ALSA support, let's move on to configuring the JDK to use it properly. Keith Packard  ran into sound problems in Ubuntu  and fixed it with a small change to his "
    },
    {
      "self_ref": "#/texts/21",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "sound.properties",
      "text": "sound.properties",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/22",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " file:",
      "text": " file:"
    },
    {
      "self_ref": "#/texts/23",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "#javax.sound.sampled.Clip=org.classpath.icedtea.pulseaudio.PulseAudioMixerProvider\n#javax.sound.sampled.Port=org.classpath.icedtea.pulseaudio.PulseAudioMixerProvider\n#javax.sound.sampled.SourceDataLine=org.classpath.icedtea.pulseaudio.PulseAudioMixerProvider\n#javax.sound.sampled.TargetDataLine=org.classpath.icedtea.pulseaudio.PulseAudioMixerProvider\n\njavax.sound.sampled.Clip=com.sun.media.sound.DirectAudioDeviceProvider\njavax.sound.sampled.Port=com.sun.media.sound.PortMixerProvider\njavax.sound.sampled.SourceDataLine=com.sun.media.sound.DirectAudioDeviceProvider\njavax.sound.sampled.TargetDataLine=com.sun.media.sound.DirectAudioDeviceProvider",
      "text": "#javax.sound.sampled.Clip=org.classpath.icedtea.pulseaudio.PulseAudioMixerProvider\n#javax.sound.sampled.Port=org.classpath.icedtea.pulseaudio.PulseAudioMixerProvider\n#javax.sound.sampled.SourceDataLine=org.classpath.icedtea.pulseaudio.PulseAudioMixerProvider\n#javax.sound.sampled.TargetDataLine=org.classpath.icedtea.pulseaudio.PulseAudioMixerProvider\n\njavax.sound.sampled.Clip=com.sun.media.sound.DirectAudioDeviceProvider\njavax.sound.sampled.Port=com.sun.media.sound.PortMixerProvider\njavax.sound.sampled.SourceDataLine=com.sun.media.sound.DirectAudioDeviceProvider\njavax.sound.sampled.TargetDataLine=com.sun.media.sound.DirectAudioDeviceProvider",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/24",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Let's double check that this will work for the Azul JDK. We need to see if these",
      "text": "Let's double check that this will work for the Azul JDK. We need to see if these"
    },
    {
      "self_ref": "#/texts/25",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "com.sun.media.sound",
      "text": "com.sun.media.sound",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/26",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " import paths exists for us:",
      "text": " import paths exists for us:"
    },
    {
      "self_ref": "#/texts/27",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "$ find /usr/lib/j* |grep -i sound\n/usr/lib/jvm/java-17-openjdk-17.0.2.0.8-7.fc36.x86_64/lib/libjsound.so\n/usr/lib/jvm/zulu11-ca/conf/sound.properties\n/usr/lib/jvm/zulu11-ca/lib/libjsound.so\n\n$ strings /usr/lib/jvm/zulu11-ca/lib/libjsound.so | grep DirectAudioDeviceProvider\nJava_com_sun_media_sound_DirectAudioDeviceProvider_nNewDirectAudioDeviceInfo\nJava_com_sun_media_sound_DirectAudioDeviceProvider_nGetNumDevices\n?com/sun/media/sound/DirectAudioDeviceProvider$DirectAudioDeviceInfo\nJava_com_sun_media_sound_DirectAudioDeviceProvider_nNewDirectAudioDeviceInfo\nJava_com_sun_media_sound_DirectAudioDeviceProvider_nGetNumDevices",
      "text": "$ find /usr/lib/j* |grep -i sound\n/usr/lib/jvm/java-17-openjdk-17.0.2.0.8-7.fc36.x86_64/lib/libjsound.so\n/usr/lib/jvm/zulu11-ca/conf/sound.properties\n/usr/lib/jvm/zulu11-ca/lib/libjsound.so\n\n$ strings /usr/lib/jvm/zulu11-ca/lib/libjsound.so | grep DirectAudioDeviceProvider\nJava_com_sun_media_sound_DirectAudioDeviceProvider_nNewDirectAudioDeviceInfo\nJava_com_sun_media_sound_DirectAudioDeviceProvider_nGetNumDevices\n?com/sun/media/sound/DirectAudioDeviceProvider$DirectAudioDeviceInfo\nJava_com_sun_media_sound_DirectAudioDeviceProvider_nNewDirectAudioDeviceInfo\nJava_com_sun_media_sound_DirectAudioDeviceProvider_nGetNumDevices",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/28",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Awesome! Those paths match up exactly! \ud83c\udf89",
      "text": "Awesome! Those paths match up exactly! \ud83c\udf89"
    },
    {
      "self_ref": "#/texts/29",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Let's find our ",
      "text": "Let's find our "
    },
    {
      "self_ref": "#/texts/30",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "sound.properties",
      "text": "sound.properties",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/31",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " file and make the same modifications:",
      "text": " file and make the same modifications:"
    },
    {
      "self_ref": "#/texts/32",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "$ find /usr/lib/jvm -name sound.properties\n/usr/lib/jvm/zulu11-ca/conf/sound.properties",
      "text": "$ find /usr/lib/jvm -name sound.properties\n/usr/lib/jvm/zulu11-ca/conf/sound.properties",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/33",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Open ",
      "text": "Open "
    },
    {
      "self_ref": "#/texts/34",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/usr/lib/jvm/zulu11-ca/conf/sound.properties",
      "text": "/usr/lib/jvm/zulu11-ca/conf/sound.properties",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/35",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " in your favorite editor and add on Keith's four lines at the end:",
      "text": " in your favorite editor and add on Keith's four lines at the end:"
    },
    {
      "self_ref": "#/texts/36",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "# /usr/lib/jvm/zulu11-ca/conf/sound.properties\njavax.sound.sampled.Clip=com.sun.media.sound.DirectAudioDeviceProvider\njavax.sound.sampled.Port=com.sun.media.sound.PortMixerProvider\njavax.sound.sampled.SourceDataLine=com.sun.media.sound.DirectAudioDeviceProvider\njavax.sound.sampled.TargetDataLine=com.sun.media.sound.DirectAudioDeviceProvider",
      "text": "# /usr/lib/jvm/zulu11-ca/conf/sound.properties\njavax.sound.sampled.Clip=com.sun.media.sound.DirectAudioDeviceProvider\njavax.sound.sampled.Port=com.sun.media.sound.PortMixerProvider\njavax.sound.sampled.SourceDataLine=com.sun.media.sound.DirectAudioDeviceProvider\njavax.sound.sampled.TargetDataLine=com.sun.media.sound.DirectAudioDeviceProvider",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/37",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "section_header",
      "prov": [],
      "orig": "Installing ThinkOrSwim",
      "text": "Installing ThinkOrSwim",
      "level": 1
    },
    {
      "self_ref": "#/texts/38",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Head over to  ThinkOrSwim's download page  to download the installer. It's a big installer bundled up inside a shell script (ugly, I know). Run the script with",
      "text": "Head over to  ThinkOrSwim's download page  to download the installer. It's a big installer bundled up inside a shell script (ugly, I know). Run the script with"
    },
    {
      "self_ref": "#/texts/39",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/bin/bash thinkorswim_installer.sh",
      "text": "/bin/bash thinkorswim_installer.sh",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/40",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " and follow the prompts. I choose to install it only for my user so that it installs in my home directory.",
      "text": " and follow the prompts. I choose to install it only for my user so that it installs in my home directory."
    },
    {
      "self_ref": "#/texts/41",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "I use i3wm and the installer doesn't put a desktop file in the right place for me. Here's what I drop into ",
      "text": "I use i3wm and the installer doesn't put a desktop file in the right place for me. Here's what I drop into "
    },
    {
      "self_ref": "#/texts/42",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "~/.local/share/applications/thinkorswim.desktop",
      "text": "~/.local/share/applications/thinkorswim.desktop",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/43",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ":",
      "text": ":"
    },
    {
      "self_ref": "#/texts/44",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "# ~/.local/share/applications/thinkorswim.desktop\n[Desktop Entry]\nName=ThinkOrSwim\nComment=ThinkOrSwim Desktop\nExec=/home/major/thinkorswim/thinkorswim\nType=Application\nCategories=Finance",
      "text": "# ~/.local/share/applications/thinkorswim.desktop\n[Desktop Entry]\nName=ThinkOrSwim\nComment=ThinkOrSwim Desktop\nExec=/home/major/thinkorswim/thinkorswim\nType=Application\nCategories=Finance",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/45",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Of course, if you aren't running as the user ",
      "text": "Of course, if you aren't running as the user "
    },
    {
      "self_ref": "#/texts/46",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "major",
      "text": "major",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/47",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " or if you installed ThinkOrSwim in a different location, be sure to change the ",
      "text": " or if you installed ThinkOrSwim in a different location, be sure to change the "
    },
    {
      "self_ref": "#/texts/48",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "Exec=",
      "text": "Exec=",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/49",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " line above. \ud83d\ude09",
      "text": " line above. \ud83d\ude09"
    },
    {
      "self_ref": "#/texts/50",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Start up ThinkOrSwim using your desktop launcher and enjoy trading on Linux! \ud83c\udf89",
      "text": "Start up ThinkOrSwim using your desktop launcher and enjoy trading on Linux! \ud83c\udf89"
    }
  ],
  "pictures": [],
  "tables": [],
  "key_value_items": [],
  "form_items": [],
  "pages": {}
}