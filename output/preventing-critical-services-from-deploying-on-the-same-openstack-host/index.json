{
  "schema_name": "DoclingDocument",
  "version": "1.4.0",
  "name": "myfile",
  "origin": {
    "mimetype": "text/markdown",
    "binary_hash": 4734686536866040292,
    "filename": "myfile.md"
  },
  "furniture": {
    "self_ref": "#/furniture",
    "children": [],
    "content_layer": "furniture",
    "name": "_root_",
    "label": "unspecified"
  },
  "body": {
    "self_ref": "#/body",
    "children": [
      {
        "$ref": "#/texts/0"
      },
      {
        "$ref": "#/texts/1"
      },
      {
        "$ref": "#/texts/2"
      },
      {
        "$ref": "#/texts/3"
      },
      {
        "$ref": "#/texts/4"
      },
      {
        "$ref": "#/texts/5"
      },
      {
        "$ref": "#/texts/6"
      },
      {
        "$ref": "#/texts/7"
      },
      {
        "$ref": "#/texts/8"
      },
      {
        "$ref": "#/texts/9"
      },
      {
        "$ref": "#/texts/10"
      },
      {
        "$ref": "#/texts/11"
      },
      {
        "$ref": "#/texts/12"
      },
      {
        "$ref": "#/texts/13"
      },
      {
        "$ref": "#/texts/14"
      },
      {
        "$ref": "#/texts/15"
      },
      {
        "$ref": "#/texts/16"
      },
      {
        "$ref": "#/texts/17"
      },
      {
        "$ref": "#/texts/18"
      },
      {
        "$ref": "#/texts/19"
      },
      {
        "$ref": "#/texts/20"
      },
      {
        "$ref": "#/texts/21"
      },
      {
        "$ref": "#/texts/22"
      },
      {
        "$ref": "#/texts/23"
      },
      {
        "$ref": "#/texts/24"
      },
      {
        "$ref": "#/texts/25"
      },
      {
        "$ref": "#/texts/26"
      },
      {
        "$ref": "#/texts/27"
      },
      {
        "$ref": "#/texts/28"
      },
      {
        "$ref": "#/texts/29"
      }
    ],
    "content_layer": "body",
    "name": "_root_",
    "label": "unspecified"
  },
  "groups": [],
  "texts": [
    {
      "self_ref": "#/texts/0",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "OpenStack's compute service, nova, manages all of the virtual machines within a OpenStack cloud. When you ask nova to build an instance, or a group of instances, nova's scheduler system determines which hypervisors should run each instance. The scheduler uses  filters  to figure out where each instance belongs.",
      "text": "OpenStack's compute service, nova, manages all of the virtual machines within a OpenStack cloud. When you ask nova to build an instance, or a group of instances, nova's scheduler system determines which hypervisors should run each instance. The scheduler uses  filters  to figure out where each instance belongs."
    },
    {
      "self_ref": "#/texts/1",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "However, there are situations where the scheduler might put more than one of your instances on the same host, especially when resources are constrained. This can be a problem when you deploy certain highly available applications, like MariaDB and Galera. If more than one of your database instances landed on the same physical host, a failure of that physical host could take down more than one database instance.",
      "text": "However, there are situations where the scheduler might put more than one of your instances on the same host, especially when resources are constrained. This can be a problem when you deploy certain highly available applications, like MariaDB and Galera. If more than one of your database instances landed on the same physical host, a failure of that physical host could take down more than one database instance."
    },
    {
      "self_ref": "#/texts/2",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "section_header",
      "prov": [],
      "orig": "Filters to the rescue",
      "text": "Filters to the rescue",
      "level": 1
    },
    {
      "self_ref": "#/texts/3",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "The scheduler offers the  ServerGroupAntiAffinityFilter  filter for these deployments. This allows a user to create a server group, apply a policy to the group, and then begin adding servers to that group.",
      "text": "The scheduler offers the  ServerGroupAntiAffinityFilter  filter for these deployments. This allows a user to create a server group, apply a policy to the group, and then begin adding servers to that group."
    },
    {
      "self_ref": "#/texts/4",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "If the scheduler filter can't find a way to fulfill the anti-affinity request (which often happens if the hosts are low on resources), it will fail the entire build transaction with an error. In other words, unless the entire request can be fulfilled, it won't be deployed.",
      "text": "If the scheduler filter can't find a way to fulfill the anti-affinity request (which often happens if the hosts are low on resources), it will fail the entire build transaction with an error. In other words, unless the entire request can be fulfilled, it won't be deployed."
    },
    {
      "self_ref": "#/texts/5",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Let's see how this works in action on an OpenStack Mitaka cloud deployed with  OpenStack-Ansible .",
      "text": "Let's see how this works in action on an OpenStack Mitaka cloud deployed with  OpenStack-Ansible ."
    },
    {
      "self_ref": "#/texts/6",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "section_header",
      "prov": [],
      "orig": "Creating a server group",
      "text": "Creating a server group",
      "level": 1
    },
    {
      "self_ref": "#/texts/7",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "We can use the  openstackclient  tool to create our server group:",
      "text": "We can use the  openstackclient  tool to create our server group:"
    },
    {
      "self_ref": "#/texts/8",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "$ openstack server group create --policy anti-affinity db-production\n+----------+--------------------------------------+\n| Field    | Value                                |\n+----------+--------------------------------------+\n| id       | cd234914-980a-42f2-b77c-602a7cc0080f |\n| members  |                                      |\n| name     | db-production                        |\n| policies | anti-affinity                        |\n+----------+--------------------------------------+",
      "text": "$ openstack server group create --policy anti-affinity db-production\n+----------+--------------------------------------+\n| Field    | Value                                |\n+----------+--------------------------------------+\n| id       | cd234914-980a-42f2-b77c-602a7cc0080f |\n| members  |                                      |\n| name     | db-production                        |\n| policies | anti-affinity                        |\n+----------+--------------------------------------+",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/9",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "We've told nova that we want all of the instances in the ",
      "text": "We've told nova that we want all of the instances in the "
    },
    {
      "self_ref": "#/texts/10",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "db-production",
      "text": "db-production",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/11",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " group to land on different OpenStack hosts. I'll copy the ",
      "text": " group to land on different OpenStack hosts. I'll copy the "
    },
    {
      "self_ref": "#/texts/12",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "id",
      "text": "id",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/13",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " to my clipboard since I'll need that UUID for the next step.",
      "text": " to my clipboard since I'll need that UUID for the next step."
    },
    {
      "self_ref": "#/texts/14",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "section_header",
      "prov": [],
      "orig": "Adding hosts to the group",
      "text": "Adding hosts to the group",
      "level": 1
    },
    {
      "self_ref": "#/texts/15",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "My small OpenStack cloud has four hypervisors, so I can add four instances to this server group:",
      "text": "My small OpenStack cloud has four hypervisors, so I can add four instances to this server group:"
    },
    {
      "self_ref": "#/texts/16",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "$ openstack server create \\\n  --flavor m1.small \\\n  --image \"Fedora 24\" \\\n  --nic net-id=bc8895ab-98f7-478f-a54a-36b121f7bb3f \\\n  --key-name personal_servers \\\n  --hint \"group=cd234914-980a-42f2-b77c-602a7cc0080f\" \\\n  --max 4\n  prod-db",
      "text": "$ openstack server create \\\n  --flavor m1.small \\\n  --image \"Fedora 24\" \\\n  --nic net-id=bc8895ab-98f7-478f-a54a-36b121f7bb3f \\\n  --key-name personal_servers \\\n  --hint \"group=cd234914-980a-42f2-b77c-602a7cc0080f\" \\\n  --max 4\n  prod-db",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/17",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "This ",
      "text": "This "
    },
    {
      "self_ref": "#/texts/18",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "server create",
      "text": "server create",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/19",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " command looks fairly standard, but I've added the ",
      "text": " command looks fairly standard, but I've added the "
    },
    {
      "self_ref": "#/texts/20",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "--hint",
      "text": "--hint",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/21",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " parameter to specify that we want these servers scheduled as part of the group we just created. Also, I've requested for four servers to be built at the same time. After a few moments, we should have four servers active:",
      "text": " parameter to specify that we want these servers scheduled as part of the group we just created. Also, I've requested for four servers to be built at the same time. After a few moments, we should have four servers active:"
    },
    {
      "self_ref": "#/texts/22",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "$ openstack server list --name prod-db -c ID -c Name -c Status\n+--------------------------------------+-----------+--------+\n| ID                                   | Name      | Status |\n+--------------------------------------+-----------+--------+\n| 7e7a81f3-eb02-4751-93c1-a0de999b8423 | prod-db-4 | ACTIVE |\n| b742fb58-8ea4-4e26-bfbf-645a698fbb26 | prod-db-3 | ACTIVE |\n| 78c7a43c-4deb-40da-a419-e62db37ab41a | prod-db-2 | ACTIVE |\n| 7b8af038-6441-40c0-87c8-0a1acced17a6 | prod-db-1 | ACTIVE |\n+--------------------------------------+-----------+--------+",
      "text": "$ openstack server list --name prod-db -c ID -c Name -c Status\n+--------------------------------------+-----------+--------+\n| ID                                   | Name      | Status |\n+--------------------------------------+-----------+--------+\n| 7e7a81f3-eb02-4751-93c1-a0de999b8423 | prod-db-4 | ACTIVE |\n| b742fb58-8ea4-4e26-bfbf-645a698fbb26 | prod-db-3 | ACTIVE |\n| 78c7a43c-4deb-40da-a419-e62db37ab41a | prod-db-2 | ACTIVE |\n| 7b8af038-6441-40c0-87c8-0a1acced17a6 | prod-db-1 | ACTIVE |\n+--------------------------------------+-----------+--------+",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/23",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "If we check the instances, they should be on different hosts:",
      "text": "If we check the instances, they should be on different hosts:"
    },
    {
      "self_ref": "#/texts/24",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "$ for i in {1..4}; do openstack server show prod-db-${i} -c hostId -f shell; done\nhostid=\"5fea4e5862f82f051e26caf926fe34bd3a9f1439b08a464f817b4c61\"\nhostid=\"65d87faf6d9baa110afa5f2e0308781dde4629142170b2c9af1f090b\"\nhostid=\"243f833055303efe838b3233f7ba6e1993fb28895ae11c724f10cc73\"\nhostid=\"54df76a1e66bd8585cc3c1f8f38e8f4937456394f2409daf2a8b4c2e\"",
      "text": "$ for i in {1..4}; do openstack server show prod-db-${i} -c hostId -f shell; done\nhostid=\"5fea4e5862f82f051e26caf926fe34bd3a9f1439b08a464f817b4c61\"\nhostid=\"65d87faf6d9baa110afa5f2e0308781dde4629142170b2c9af1f090b\"\nhostid=\"243f833055303efe838b3233f7ba6e1993fb28895ae11c724f10cc73\"\nhostid=\"54df76a1e66bd8585cc3c1f8f38e8f4937456394f2409daf2a8b4c2e\"",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/25",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Success!",
      "text": "Success!"
    },
    {
      "self_ref": "#/texts/26",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "If we try to build one more instance, it should fail since the scheduler cannot fulfill the anti-affinity policy applied to server group:",
      "text": "If we try to build one more instance, it should fail since the scheduler cannot fulfill the anti-affinity policy applied to server group:"
    },
    {
      "self_ref": "#/texts/27",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "$ openstack server create \\\n  --flavor m1.small \\\n  --image \"Fedora 24\" \\\n  --nic net-id=bc8895ab-98f7-478f-a54a-36b121f7bb3f \\\n  --key-name personal_servers \\\n  --hint \"group=cd234914-980a-42f2-b77c-602a7cc0080f\" \\\n  --wait \\\n  prod-db-5\nError creating server: prod-db-5\nError creating server\n$ openstack server show prod-db-5 -c fault -f shell\nfault=\"{u'message': u'No valid host was found. There are not enough hosts available.', u'code': 500...",
      "text": "$ openstack server create \\\n  --flavor m1.small \\\n  --image \"Fedora 24\" \\\n  --nic net-id=bc8895ab-98f7-478f-a54a-36b121f7bb3f \\\n  --key-name personal_servers \\\n  --hint \"group=cd234914-980a-42f2-b77c-602a7cc0080f\" \\\n  --wait \\\n  prod-db-5\nError creating server: prod-db-5\nError creating server\n$ openstack server show prod-db-5 -c fault -f shell\nfault=\"{u'message': u'No valid host was found. There are not enough hosts available.', u'code': 500...",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/28",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "The scheduler couldn't find a valid host for a fifth server in the anti-affinity group.",
      "text": "The scheduler couldn't find a valid host for a fifth server in the anti-affinity group."
    },
    {
      "self_ref": "#/texts/29",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Photo credit:  \"crowded houses\" from jesuscm on Flickr",
      "text": "Photo credit:  \"crowded houses\" from jesuscm on Flickr"
    }
  ],
  "pictures": [],
  "tables": [],
  "key_value_items": [],
  "form_items": [],
  "pages": {}
}