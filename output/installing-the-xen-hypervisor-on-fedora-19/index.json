{
  "schema_name": "DoclingDocument",
  "version": "1.4.0",
  "name": "index",
  "origin": {
    "mimetype": "text/markdown",
    "binary_hash": 13911711326732306828,
    "filename": "index.md"
  },
  "furniture": {
    "self_ref": "#/furniture",
    "children": [],
    "content_layer": "furniture",
    "name": "_root_",
    "label": "unspecified"
  },
  "body": {
    "self_ref": "#/body",
    "children": [
      {
        "$ref": "#/texts/0"
      },
      {
        "$ref": "#/groups/0"
      },
      {
        "$ref": "#/texts/12"
      },
      {
        "$ref": "#/texts/13"
      },
      {
        "$ref": "#/texts/14"
      },
      {
        "$ref": "#/texts/15"
      },
      {
        "$ref": "#/texts/16"
      },
      {
        "$ref": "#/texts/17"
      },
      {
        "$ref": "#/texts/18"
      },
      {
        "$ref": "#/texts/19"
      },
      {
        "$ref": "#/texts/20"
      },
      {
        "$ref": "#/texts/21"
      },
      {
        "$ref": "#/texts/22"
      },
      {
        "$ref": "#/texts/23"
      },
      {
        "$ref": "#/texts/24"
      },
      {
        "$ref": "#/texts/25"
      },
      {
        "$ref": "#/texts/26"
      },
      {
        "$ref": "#/texts/27"
      },
      {
        "$ref": "#/texts/28"
      },
      {
        "$ref": "#/texts/29"
      },
      {
        "$ref": "#/texts/30"
      },
      {
        "$ref": "#/texts/31"
      },
      {
        "$ref": "#/texts/32"
      },
      {
        "$ref": "#/texts/33"
      },
      {
        "$ref": "#/texts/34"
      },
      {
        "$ref": "#/texts/35"
      },
      {
        "$ref": "#/texts/36"
      }
    ],
    "content_layer": "body",
    "name": "_root_",
    "label": "unspecified"
  },
  "groups": [
    {
      "self_ref": "#/groups/0",
      "parent": {
        "$ref": "#/body"
      },
      "children": [
        {
          "$ref": "#/texts/1"
        },
        {
          "$ref": "#/texts/2"
        },
        {
          "$ref": "#/texts/3"
        },
        {
          "$ref": "#/texts/4"
        },
        {
          "$ref": "#/texts/5"
        },
        {
          "$ref": "#/texts/6"
        },
        {
          "$ref": "#/texts/7"
        },
        {
          "$ref": "#/texts/8"
        },
        {
          "$ref": "#/texts/9"
        },
        {
          "$ref": "#/texts/10"
        },
        {
          "$ref": "#/texts/11"
        }
      ],
      "content_layer": "body",
      "name": "list",
      "label": "list"
    }
  ],
  "texts": [
    {
      "self_ref": "#/texts/0",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "aliases:",
      "text": "aliases:"
    },
    {
      "self_ref": "#/texts/1",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "/2013/06/02/installing-the-xen-hypervisor-on-fedora-19/",
      "text": "/2013/06/02/installing-the-xen-hypervisor-on-fedora-19/",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/2",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "command line",
      "text": "command line",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/3",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "fedora",
      "text": "fedora",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/4",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "kernel",
      "text": "kernel",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/5",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "linux",
      "text": "linux",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/6",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "security",
      "text": "security",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/7",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "selinux",
      "text": "selinux",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/8",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "sysadmin",
      "text": "sysadmin",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/9",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "virtualization",
      "text": "virtualization",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/10",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "xen",
      "text": "xen",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/11",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "yum",
      "text": "yum",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/12",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "It's been a little while  since I last posted about installing Xen on Fedora , so I figured that Fedora 19's beta release was as good a time as any to write a new post. To get started, you'll need to get Fedora 19 installed on your favorite hardware (or virtual machine).",
      "text": "It's been a little while  since I last posted about installing Xen on Fedora , so I figured that Fedora 19's beta release was as good a time as any to write a new post. To get started, you'll need to get Fedora 19 installed on your favorite hardware (or virtual machine)."
    },
    {
      "self_ref": "#/texts/13",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Install the Xen hypervisor and tools. Also, ensure that both of the necessary daemons are running on each boot:",
      "text": "Install the Xen hypervisor and tools. Also, ensure that both of the necessary daemons are running on each boot:"
    },
    {
      "self_ref": "#/texts/14",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "yum -y install xen xen-hypervisor xen-libs xen-runtime\nchkconfig xend on\nchkconfig xendomains on",
      "text": "yum -y install xen xen-hypervisor xen-libs xen-runtime\nchkconfig xend on\nchkconfig xendomains on",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/15",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "You'll notice that I didn't start the daemons quite yet. We will need the xen hypervisor running before they will be of any use.",
      "text": "You'll notice that I didn't start the daemons quite yet. We will need the xen hypervisor running before they will be of any use."
    },
    {
      "self_ref": "#/texts/16",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Now, let's configure GRUB2. I wrote a  quick post about these steps  last year. The Xen kernel entry should already be configured (by grubby), but it's not the default. Fixing that is a quick process:",
      "text": "Now, let's configure GRUB2. I wrote a  quick post about these steps  last year. The Xen kernel entry should already be configured (by grubby), but it's not the default. Fixing that is a quick process:"
    },
    {
      "self_ref": "#/texts/17",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "# grep ^menuentry /boot/grub2/grub.cfg | cut -d \"'\" -f2\nFedora, with Linux 3.9.4-300.fc19.x86_64\nFedora, with Linux 0-rescue-4ea51ecfff4f4e64a5ec903c495ee5b6\nFedora, with Xen hypervisor\n# grub2-set-default 'Fedora, with Xen hypervisor'\n# grub2-editenv list\nsaved_entry=Fedora, with Xen hypervisor",
      "text": "# grep ^menuentry /boot/grub2/grub.cfg | cut -d \"'\" -f2\nFedora, with Linux 3.9.4-300.fc19.x86_64\nFedora, with Linux 0-rescue-4ea51ecfff4f4e64a5ec903c495ee5b6\nFedora, with Xen hypervisor\n# grub2-set-default 'Fedora, with Xen hypervisor'\n# grub2-editenv list\nsaved_entry=Fedora, with Xen hypervisor",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/18",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "At this point, you're ready to reboot. After the reboot, verify that Xen is running:",
      "text": "At this point, you're ready to reboot. After the reboot, verify that Xen is running:"
    },
    {
      "self_ref": "#/texts/19",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "# xm dmesg | head\n __  __            _  _    ____    ____    ____    __      _  ___\n \\ \\/ /___ _ __   | || |  |___ \\  |___ \\  | ___|  / _| ___/ |/ _ \\\n  \\  // _ \\ '_ \\  | || |_   __) |   __) |_|___ \\ | |_ / __| | (_) |\n  /  \\  __/ | | | |__   _| / __/ _ / __/|__|__) ||  _| (__| |\\__, |\n /_/\\_\\___|_| |_|    |_|(_)_____(_)_____| |____(_)_|  \\___|_|  /_/\n\n(XEN) Xen version 4.2.2 (mockbuild@phx2.fedoraproject.org) (gcc (GCC) 4.8.0 20130412 (Red Hat 4.8.0-2)) Fri May 17 19:39:53 UTC 2013\n(XEN) Latest ChangeSet: unavailable\n(XEN) Bootloader: GRUB 2.00\n(XEN) Command line: placeholder",
      "text": "# xm dmesg | head\n __  __            _  _    ____    ____    ____    __      _  ___\n \\ \\/ /___ _ __   | || |  |___ \\  |___ \\  | ___|  / _| ___/ |/ _ \\\n  \\  // _ \\ '_ \\  | || |_   __) |   __) |_|___ \\ | |_ / __| | (_) |\n  /  \\  __/ | | | |__   _| / __/ _ / __/|__|__) ||  _| (__| |\\__, |\n /_/\\_\\___|_| |_|    |_|(_)_____(_)_____| |____(_)_|  \\___|_|  /_/\n\n(XEN) Xen version 4.2.2 (mockbuild@phx2.fedoraproject.org) (gcc (GCC) 4.8.0 20130412 (Red Hat 4.8.0-2)) Fri May 17 19:39:53 UTC 2013\n(XEN) Latest ChangeSet: unavailable\n(XEN) Bootloader: GRUB 2.00\n(XEN) Command line: placeholder",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/20",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "If you're adventurous on the command line, you're done here. However, I enjoy using virt-manager for quick access to virtual machines and I also like all of the scripting and remote administration capabilities that libvirt delivers. Let's get the tools and daemons installed and running:",
      "text": "If you're adventurous on the command line, you're done here. However, I enjoy using virt-manager for quick access to virtual machines and I also like all of the scripting and remote administration capabilities that libvirt delivers. Let's get the tools and daemons installed and running:"
    },
    {
      "self_ref": "#/texts/21",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "yum -y install virt-manager dejavu* xorg-x11-xauth\nyum -y install libvirt-daemon-driver-network libvirt-daemon-driver-storage libvirt-daemon-xen\nchkconfig libvirtd on\nservice libvirtd start",
      "text": "yum -y install virt-manager dejavu* xorg-x11-xauth\nyum -y install libvirt-daemon-driver-network libvirt-daemon-driver-storage libvirt-daemon-xen\nchkconfig libvirtd on\nservice libvirtd start",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/22",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "You're now ready to use virt-manager to manage your virtual machines. Simply ssh to your hypervisor with X forwarding enabled (",
      "text": "You're now ready to use virt-manager to manage your virtual machines. Simply ssh to your hypervisor with X forwarding enabled ("
    },
    {
      "self_ref": "#/texts/23",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "ssh -X hypervisor.mydomain.com",
      "text": "ssh -X hypervisor.mydomain.com",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/24",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ") and run ",
      "text": ") and run "
    },
    {
      "self_ref": "#/texts/25",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "virt-manager",
      "text": "virt-manager",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/26",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ". You won't have a virtual network or bridge to use for virtual machines quite yet. You have two options: NAT your VM's or configure a network bridge. I prefer the bridge but you may require something different in your environment.",
      "text": ". You won't have a virtual network or bridge to use for virtual machines quite yet. You have two options: NAT your VM's or configure a network bridge. I prefer the bridge but you may require something different in your environment."
    },
    {
      "self_ref": "#/texts/27",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "For the NAT option (the easiest for beginners):",
      "text": "For the NAT option (the easiest for beginners):"
    },
    {
      "self_ref": "#/texts/28",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "yum -y install libvirt-daemon-config-network libvirt-daemon-config-nwfilter\nservice libvirtd restart",
      "text": "yum -y install libvirt-daemon-config-network libvirt-daemon-config-nwfilter\nservice libvirtd restart",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/29",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "For the network-bridge option, you'll need to adjust your network scripts to create a bridge and add your primary network interface to the bridge. That's a bit outside the scope of this post, but the  Fedora Wiki  and  HowtoForge  (ignore the KVM parts of their guide).",
      "text": "For the network-bridge option, you'll need to adjust your network scripts to create a bridge and add your primary network interface to the bridge. That's a bit outside the scope of this post, but the  Fedora Wiki  and  HowtoForge  (ignore the KVM parts of their guide)."
    },
    {
      "self_ref": "#/texts/30",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "You now have a working Xen installation on Fedora 19!",
      "text": "You now have a working Xen installation on Fedora 19!"
    },
    {
      "self_ref": "#/texts/31",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "FOR THOSE WHO EMBRACE SECURITY:",
      "text": "FOR THOSE WHO EMBRACE SECURITY:"
    },
    {
      "self_ref": "#/texts/32",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "If you run SELinux in Enforcing mode, there's still a lingering issue where SELinux prevents python (running under xend) from talking to block devices (like logical volumes). I  opened a bug  about a similar problem before but I need to open another one for the block device issue. If you're itching for a workaround, you can force SELinux into permissive mode for the xend_t context only:",
      "text": "If you run SELinux in Enforcing mode, there's still a lingering issue where SELinux prevents python (running under xend) from talking to block devices (like logical volumes). I  opened a bug  about a similar problem before but I need to open another one for the block device issue. If you're itching for a workaround, you can force SELinux into permissive mode for the xend_t context only:"
    },
    {
      "self_ref": "#/texts/33",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "yum -y install selinux-policy-devel\nsemanage permissive -a xend_t",
      "text": "yum -y install selinux-policy-devel\nsemanage permissive -a xend_t",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/34",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "That's not the best option for now, but it's certainly better than ",
      "text": "That's not the best option for now, but it's certainly better than "
    },
    {
      "self_ref": "#/texts/35",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "setenforce 0",
      "text": "setenforce 0",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/36",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ". ;)",
      "text": ". ;)"
    }
  ],
  "pictures": [],
  "tables": [],
  "key_value_items": [],
  "form_items": [],
  "pages": {}
}