{
  "schema_name": "DoclingDocument",
  "version": "1.4.0",
  "name": "myfile",
  "origin": {
    "mimetype": "text/markdown",
    "binary_hash": 2314123754795410368,
    "filename": "myfile.md"
  },
  "furniture": {
    "self_ref": "#/furniture",
    "children": [],
    "content_layer": "furniture",
    "name": "_root_",
    "label": "unspecified"
  },
  "body": {
    "self_ref": "#/body",
    "children": [
      {
        "$ref": "#/texts/0"
      },
      {
        "$ref": "#/texts/1"
      },
      {
        "$ref": "#/texts/2"
      },
      {
        "$ref": "#/texts/3"
      },
      {
        "$ref": "#/texts/4"
      },
      {
        "$ref": "#/groups/0"
      },
      {
        "$ref": "#/texts/7"
      },
      {
        "$ref": "#/texts/8"
      },
      {
        "$ref": "#/texts/9"
      },
      {
        "$ref": "#/texts/10"
      },
      {
        "$ref": "#/texts/11"
      },
      {
        "$ref": "#/texts/12"
      },
      {
        "$ref": "#/texts/13"
      },
      {
        "$ref": "#/texts/14"
      },
      {
        "$ref": "#/texts/15"
      },
      {
        "$ref": "#/texts/16"
      },
      {
        "$ref": "#/texts/17"
      },
      {
        "$ref": "#/texts/18"
      },
      {
        "$ref": "#/texts/19"
      },
      {
        "$ref": "#/texts/20"
      },
      {
        "$ref": "#/texts/21"
      },
      {
        "$ref": "#/texts/22"
      },
      {
        "$ref": "#/texts/23"
      },
      {
        "$ref": "#/texts/24"
      },
      {
        "$ref": "#/texts/25"
      },
      {
        "$ref": "#/texts/26"
      },
      {
        "$ref": "#/texts/27"
      },
      {
        "$ref": "#/texts/28"
      },
      {
        "$ref": "#/texts/29"
      },
      {
        "$ref": "#/texts/30"
      },
      {
        "$ref": "#/texts/31"
      },
      {
        "$ref": "#/texts/32"
      },
      {
        "$ref": "#/texts/33"
      },
      {
        "$ref": "#/texts/34"
      },
      {
        "$ref": "#/texts/35"
      },
      {
        "$ref": "#/texts/36"
      },
      {
        "$ref": "#/texts/37"
      },
      {
        "$ref": "#/texts/38"
      },
      {
        "$ref": "#/texts/39"
      },
      {
        "$ref": "#/texts/40"
      },
      {
        "$ref": "#/texts/41"
      },
      {
        "$ref": "#/texts/42"
      },
      {
        "$ref": "#/texts/43"
      },
      {
        "$ref": "#/texts/44"
      },
      {
        "$ref": "#/texts/45"
      },
      {
        "$ref": "#/texts/46"
      },
      {
        "$ref": "#/texts/47"
      },
      {
        "$ref": "#/groups/1"
      },
      {
        "$ref": "#/texts/54"
      },
      {
        "$ref": "#/texts/55"
      },
      {
        "$ref": "#/texts/56"
      },
      {
        "$ref": "#/texts/57"
      },
      {
        "$ref": "#/texts/58"
      },
      {
        "$ref": "#/texts/59"
      },
      {
        "$ref": "#/texts/60"
      },
      {
        "$ref": "#/texts/61"
      },
      {
        "$ref": "#/texts/62"
      },
      {
        "$ref": "#/texts/63"
      },
      {
        "$ref": "#/texts/64"
      },
      {
        "$ref": "#/texts/65"
      },
      {
        "$ref": "#/texts/66"
      },
      {
        "$ref": "#/texts/67"
      },
      {
        "$ref": "#/texts/68"
      },
      {
        "$ref": "#/texts/69"
      },
      {
        "$ref": "#/texts/70"
      },
      {
        "$ref": "#/texts/71"
      },
      {
        "$ref": "#/texts/72"
      },
      {
        "$ref": "#/texts/73"
      },
      {
        "$ref": "#/texts/74"
      },
      {
        "$ref": "#/texts/75"
      },
      {
        "$ref": "#/texts/76"
      },
      {
        "$ref": "#/texts/77"
      }
    ],
    "content_layer": "body",
    "name": "_root_",
    "label": "unspecified"
  },
  "groups": [
    {
      "self_ref": "#/groups/0",
      "parent": {
        "$ref": "#/body"
      },
      "children": [
        {
          "$ref": "#/texts/5"
        },
        {
          "$ref": "#/texts/6"
        }
      ],
      "content_layer": "body",
      "name": "list",
      "label": "list"
    },
    {
      "self_ref": "#/groups/1",
      "parent": {
        "$ref": "#/body"
      },
      "children": [
        {
          "$ref": "#/texts/48"
        },
        {
          "$ref": "#/texts/49"
        },
        {
          "$ref": "#/texts/50"
        },
        {
          "$ref": "#/texts/51"
        },
        {
          "$ref": "#/texts/52"
        },
        {
          "$ref": "#/texts/53"
        }
      ],
      "content_layer": "body",
      "name": "list",
      "label": "list"
    }
  ],
  "texts": [
    {
      "self_ref": "#/texts/0",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "This post  originally appeared  on the Fedora Magazine blog.",
      "text": "This post  originally appeared  on the Fedora Magazine blog."
    },
    {
      "self_ref": "#/texts/1",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "One of my favorite features of Fedora 22 is  systemd-networkd  and all of the new features that came with it in recent systemd versions. The configuration files are easy to read, bridging is simple, and tunnels are resilient.",
      "text": "One of my favorite features of Fedora 22 is  systemd-networkd  and all of the new features that came with it in recent systemd versions. The configuration files are easy to read, bridging is simple, and tunnels are resilient."
    },
    {
      "self_ref": "#/texts/2",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "I've recently started using a small Linux server at home again as a network router and firewall. However, I used systemd-networkd this time and had some great results. Let's get started!",
      "text": "I've recently started using a small Linux server at home again as a network router and firewall. However, I used systemd-networkd this time and had some great results. Let's get started!"
    },
    {
      "self_ref": "#/texts/3",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "section_header",
      "prov": [],
      "orig": "Overview",
      "text": "Overview",
      "level": 1
    },
    {
      "self_ref": "#/texts/4",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Our example router in this example has two network interfaces:",
      "text": "Our example router in this example has two network interfaces:"
    },
    {
      "self_ref": "#/texts/5",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "eth0: public internet connectivity",
      "text": "eth0: public internet connectivity",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/6",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "eth1: private LAN (192.168.3.1/24)",
      "text": "eth1: private LAN (192.168.3.1/24)",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/7",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "We want machines on the private LAN to route their traffic through the router to the public internet via NAT. Also, we want clients on the LAN to get their IP addresses assigned automatically.",
      "text": "We want machines on the private LAN to route their traffic through the router to the public internet via NAT. Also, we want clients on the LAN to get their IP addresses assigned automatically."
    },
    {
      "self_ref": "#/texts/8",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "section_header",
      "prov": [],
      "orig": "Network configuration",
      "text": "Network configuration",
      "level": 1
    },
    {
      "self_ref": "#/texts/9",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "All of the systemd-networkd configuration files live within ",
      "text": "All of the systemd-networkd configuration files live within "
    },
    {
      "self_ref": "#/texts/10",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/etc/systemd/network",
      "text": "/etc/systemd/network",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/11",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " and we need to create that directory:",
      "text": " and we need to create that directory:"
    },
    {
      "self_ref": "#/texts/12",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "mkdir /etc/systemd/network",
      "text": "mkdir /etc/systemd/network",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/13",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "We need to write a network configuration file for our public interface that systemd-networkd can read. Open up ",
      "text": "We need to write a network configuration file for our public interface that systemd-networkd can read. Open up "
    },
    {
      "self_ref": "#/texts/14",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/etc/systemd/network/eth0.network",
      "text": "/etc/systemd/network/eth0.network",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/15",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " and write these lines:",
      "text": " and write these lines:"
    },
    {
      "self_ref": "#/texts/16",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "[Match]\nName=eth0\n\n[Network]\nAddress=PUBLIC_IP_ADDRESS/CIDR\nGateway=GATEWAY\nDNS=8.8.8.8\nDNS=8.8.4.4\nIPForward=yes",
      "text": "[Match]\nName=eth0\n\n[Network]\nAddress=PUBLIC_IP_ADDRESS/CIDR\nGateway=GATEWAY\nDNS=8.8.8.8\nDNS=8.8.4.4\nIPForward=yes",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/17",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "If we break this configuration file down, we're telling systemd-networkd to apply this configuration to any devices that are called ",
      "text": "If we break this configuration file down, we're telling systemd-networkd to apply this configuration to any devices that are called "
    },
    {
      "self_ref": "#/texts/18",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "eth0",
      "text": "eth0",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/19",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ". Also, we're specifying a public IP address and CIDR mask (like /24 or /22) so that the interface can be configured. The gateway address will be added to the routing table. We've also provided DNS servers to use with systemd-resolved (more on that later).",
      "text": ". Also, we're specifying a public IP address and CIDR mask (like /24 or /22) so that the interface can be configured. The gateway address will be added to the routing table. We've also provided DNS servers to use with systemd-resolved (more on that later)."
    },
    {
      "self_ref": "#/texts/20",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "I added ",
      "text": "I added "
    },
    {
      "self_ref": "#/texts/21",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "IPForward=yes",
      "text": "IPForward=yes",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/22",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " so that systemd-networkd will automatically enable forwarding for the interface via sysctl. (That always seems to be the step I forget when I build a Linux router.)",
      "text": " so that systemd-networkd will automatically enable forwarding for the interface via sysctl. (That always seems to be the step I forget when I build a Linux router.)"
    },
    {
      "self_ref": "#/texts/23",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Let's do the same for our LAN interface. Create this configuration file and store it as ",
      "text": "Let's do the same for our LAN interface. Create this configuration file and store it as "
    },
    {
      "self_ref": "#/texts/24",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/etc/systemd/network/eth1.network",
      "text": "/etc/systemd/network/eth1.network",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/25",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ":",
      "text": ":"
    },
    {
      "self_ref": "#/texts/26",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "[Match]\nName=eth1\n\n[Network]\nAddress=192.168.3.1/24\nIPForward=yes",
      "text": "[Match]\nName=eth1\n\n[Network]\nAddress=192.168.3.1/24\nIPForward=yes",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/27",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "We don't need to specify a gateway address here because this interface will be the gateway for the LAN.",
      "text": "We don't need to specify a gateway address here because this interface will be the gateway for the LAN."
    },
    {
      "self_ref": "#/texts/28",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "section_header",
      "prov": [],
      "orig": "Prepare the services",
      "text": "Prepare the services",
      "level": 1
    },
    {
      "self_ref": "#/texts/29",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "If we're planning to use systemd-networkd, we need to ensure that it runs instead of traditional network scripts or NetworkManager:",
      "text": "If we're planning to use systemd-networkd, we need to ensure that it runs instead of traditional network scripts or NetworkManager:"
    },
    {
      "self_ref": "#/texts/30",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "systemctl disable network\nsystemctl disable NetworkManager\nsystemctl enable systemd-networkd",
      "text": "systemctl disable network\nsystemctl disable NetworkManager\nsystemctl enable systemd-networkd",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/31",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Also, let's be sure to use systemd-resolved to handle our ",
      "text": "Also, let's be sure to use systemd-resolved to handle our "
    },
    {
      "self_ref": "#/texts/32",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/etc/resolv.conf",
      "text": "/etc/resolv.conf",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/33",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ":",
      "text": ":"
    },
    {
      "self_ref": "#/texts/34",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "systemctl enable systemd-resolved\nsystemctl start systemd-resolved\nrm -f /etc/resolv.conf\nln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf",
      "text": "systemctl enable systemd-resolved\nsystemctl start systemd-resolved\nrm -f /etc/resolv.conf\nln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/35",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "section_header",
      "prov": [],
      "orig": "Reboot",
      "text": "Reboot",
      "level": 1
    },
    {
      "self_ref": "#/texts/36",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "We're now set to reboot! It's possible to bring up systemd-networkd without rebooting but I'd rather verify with a reboot now than get goosed with a broken network after a reboot later.",
      "text": "We're now set to reboot! It's possible to bring up systemd-networkd without rebooting but I'd rather verify with a reboot now than get goosed with a broken network after a reboot later."
    },
    {
      "self_ref": "#/texts/37",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Once your router is back up, run ",
      "text": "Once your router is back up, run "
    },
    {
      "self_ref": "#/texts/38",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "networkctl",
      "text": "networkctl",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/39",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " and verify that you have  routable  in the output for both interfaces:",
      "text": " and verify that you have  routable  in the output for both interfaces:"
    },
    {
      "self_ref": "#/texts/40",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "[root@router ~]# networkctl\nIDX LINK             TYPE               OPERATIONAL SETUP\n  1 lo               loopback           carrier     unmanaged\n  2 eth0             ether              routable    configured\n  3 eth1             ether              routable    configured",
      "text": "[root@router ~]# networkctl\nIDX LINK             TYPE               OPERATIONAL SETUP\n  1 lo               loopback           carrier     unmanaged\n  2 eth0             ether              routable    configured\n  3 eth1             ether              routable    configured",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/41",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "section_header",
      "prov": [],
      "orig": "DHCP",
      "text": "DHCP",
      "level": 1
    },
    {
      "self_ref": "#/texts/42",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Now that both network interfaces are online, we need something to tell our clients about the IP configuration they should be using. There are plenty of good options here, but I prefer  dnsmasq . It has served me well over the years and it provides some handy features along with DHCP, such as DNS caching, TFTP and IPv6 router announcements.",
      "text": "Now that both network interfaces are online, we need something to tell our clients about the IP configuration they should be using. There are plenty of good options here, but I prefer  dnsmasq . It has served me well over the years and it provides some handy features along with DHCP, such as DNS caching, TFTP and IPv6 router announcements."
    },
    {
      "self_ref": "#/texts/43",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Let's install dnsmasq and enable it at boot:",
      "text": "Let's install dnsmasq and enable it at boot:"
    },
    {
      "self_ref": "#/texts/44",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "dnf -y install dnsmasq\nsystemctl enable dnsmasq",
      "text": "dnf -y install dnsmasq\nsystemctl enable dnsmasq",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/45",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Open ",
      "text": "Open "
    },
    {
      "self_ref": "#/texts/46",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/etc/dnsmasq.conf",
      "text": "/etc/dnsmasq.conf",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/47",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " in your favorite text editor and edit a few lines:",
      "text": " in your favorite text editor and edit a few lines:"
    },
    {
      "self_ref": "#/texts/48",
      "parent": {
        "$ref": "#/groups/1"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "Uncomment ",
      "text": "Uncomment ",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/49",
      "parent": {
        "$ref": "#/groups/1"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "This tells dnsmasq that it's the exclusive DHCP server on the network and that it should answer all requests",
      "text": "This tells dnsmasq that it's the exclusive DHCP server on the network and that it should answer all requests",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/50",
      "parent": {
        "$ref": "#/groups/1"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "Uncomment ",
      "text": "Uncomment ",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/51",
      "parent": {
        "$ref": "#/groups/1"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "Most ISP's filter DHCP replies on their public networks, but we don't want to take chances here. We need to restrict DHCP to our public interface only.",
      "text": "Most ISP's filter DHCP replies on their public networks, but we don't want to take chances here. We need to restrict DHCP to our public interface only.",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/52",
      "parent": {
        "$ref": "#/groups/1"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "Look for the ",
      "text": "Look for the ",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/53",
      "parent": {
        "$ref": "#/groups/1"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "We're giving clients 12 hour leases on 192.168.3.0/24",
      "text": "We're giving clients 12 hour leases on 192.168.3.0/24",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/54",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Save the file and start dnsmasq:",
      "text": "Save the file and start dnsmasq:"
    },
    {
      "self_ref": "#/texts/55",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "systemctl start dnsmasq",
      "text": "systemctl start dnsmasq",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/56",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "section_header",
      "prov": [],
      "orig": "Firewall",
      "text": "Firewall",
      "level": 1
    },
    {
      "self_ref": "#/texts/57",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "We're almost done! Now it's time to tell iptables to  masquerade  any packets from our LAN to the internet. But wait, it's 2015 and we have tools like ",
      "text": "We're almost done! Now it's time to tell iptables to  masquerade  any packets from our LAN to the internet. But wait, it's 2015 and we have tools like "
    },
    {
      "self_ref": "#/texts/58",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "firewall-cmd",
      "text": "firewall-cmd",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/59",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " to do that for us in Fedora.",
      "text": " to do that for us in Fedora."
    },
    {
      "self_ref": "#/texts/60",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Let's enable masquerading, allow DNS, and allow DHCP traffic. We can then make the state permanent:",
      "text": "Let's enable masquerading, allow DNS, and allow DHCP traffic. We can then make the state permanent:"
    },
    {
      "self_ref": "#/texts/61",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "firewall-cmd --add-masquerade\nfirewall-cmd --add-service=dns --add-service=dhcp\nfirewall-cmd --runtime-to-permanent",
      "text": "firewall-cmd --add-masquerade\nfirewall-cmd --add-service=dns --add-service=dhcp\nfirewall-cmd --runtime-to-permanent",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/62",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "section_header",
      "prov": [],
      "orig": "Testing",
      "text": "Testing",
      "level": 1
    },
    {
      "self_ref": "#/texts/63",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Put a client machine on your LAN network and you should be able to ping some public sites from the client:",
      "text": "Put a client machine on your LAN network and you should be able to ping some public sites from the client:"
    },
    {
      "self_ref": "#/texts/64",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "[root@client ~]# ping -c 4 icanhazip.com\nPING icanhazip.com (104.238.141.75) 56(84) bytes of data.\n64 bytes from lax.icanhazip.com (104.238.141.75): icmp_seq=1 ttl=52 time=69.8 ms\n64 bytes from lax.icanhazip.com (104.238.141.75): icmp_seq=2 ttl=52 time=69.7 ms\n64 bytes from lax.icanhazip.com (104.238.141.75): icmp_seq=3 ttl=52 time=69.6 ms\n64 bytes from lax.icanhazip.com (104.238.141.75): icmp_seq=4 ttl=52 time=69.7 ms\n\n--- icanhazip.com ping statistics ---\n4 packets transmitted, 4 received, 0% packet loss, time 3005ms\nrtt min/avg/max/mdev = 69.659/69.758/69.874/0.203 ms",
      "text": "[root@client ~]# ping -c 4 icanhazip.com\nPING icanhazip.com (104.238.141.75) 56(84) bytes of data.\n64 bytes from lax.icanhazip.com (104.238.141.75): icmp_seq=1 ttl=52 time=69.8 ms\n64 bytes from lax.icanhazip.com (104.238.141.75): icmp_seq=2 ttl=52 time=69.7 ms\n64 bytes from lax.icanhazip.com (104.238.141.75): icmp_seq=3 ttl=52 time=69.6 ms\n64 bytes from lax.icanhazip.com (104.238.141.75): icmp_seq=4 ttl=52 time=69.7 ms\n\n--- icanhazip.com ping statistics ---\n4 packets transmitted, 4 received, 0% packet loss, time 3005ms\nrtt min/avg/max/mdev = 69.659/69.758/69.874/0.203 ms",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/65",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "section_header",
      "prov": [],
      "orig": "Extras",
      "text": "Extras",
      "level": 1
    },
    {
      "self_ref": "#/texts/66",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "If you need to adjust your network configuration, just run ",
      "text": "If you need to adjust your network configuration, just run "
    },
    {
      "self_ref": "#/texts/67",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "systemctl restart systemd-networkd",
      "text": "systemctl restart systemd-networkd",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/68",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " afterwards. I've found that it's quite intelligent about the network devices and it won't reconfigure anything that hasn't changed.",
      "text": " afterwards. I've found that it's quite intelligent about the network devices and it won't reconfigure anything that hasn't changed."
    },
    {
      "self_ref": "#/texts/69",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "The ",
      "text": "The "
    },
    {
      "self_ref": "#/texts/70",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "networkctl",
      "text": "networkctl",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/71",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " command is very powerful. Check out the ",
      "text": " command is very powerful. Check out the "
    },
    {
      "self_ref": "#/texts/72",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "status",
      "text": "status",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/73",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " and ",
      "text": " and "
    },
    {
      "self_ref": "#/texts/74",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "lldp",
      "text": "lldp",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/75",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " functions to get more information about your network devices and the networks they're connected to.",
      "text": " functions to get more information about your network devices and the networks they're connected to."
    },
    {
      "self_ref": "#/texts/76",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "When something goes wrong, look in your systemd journal:",
      "text": "When something goes wrong, look in your systemd journal:"
    },
    {
      "self_ref": "#/texts/77",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "[root@router ~]# journalctl -u systemd-networkd\n-- Logs begin at Fri 2015-07-31 01:22:38 UTC, end at Fri 2015-07-31 02:11:24 UTC. --\nJul 31 01:46:14 router systemd[1]: Starting Network Service...\nJul 31 01:46:14 router systemd-networkd[286]: Enumeration completed\nJul 31 01:46:14 router systemd[1]: Started Network Service.\nJul 31 01:46:15 router systemd-networkd[286]: eth1            : link configured\nJul 31 01:46:15 router systemd-networkd[286]: eth0            : gained carrier\nJul 31 01:46:15 router systemd-networkd[286]: eth0            : link configured\nJul 31 01:46:16 router systemd-networkd[286]: eth1            : gained carrier",
      "text": "[root@router ~]# journalctl -u systemd-networkd\n-- Logs begin at Fri 2015-07-31 01:22:38 UTC, end at Fri 2015-07-31 02:11:24 UTC. --\nJul 31 01:46:14 router systemd[1]: Starting Network Service...\nJul 31 01:46:14 router systemd-networkd[286]: Enumeration completed\nJul 31 01:46:14 router systemd[1]: Started Network Service.\nJul 31 01:46:15 router systemd-networkd[286]: eth1            : link configured\nJul 31 01:46:15 router systemd-networkd[286]: eth0            : gained carrier\nJul 31 01:46:15 router systemd-networkd[286]: eth0            : link configured\nJul 31 01:46:16 router systemd-networkd[286]: eth1            : gained carrier",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    }
  ],
  "pictures": [],
  "tables": [],
  "key_value_items": [],
  "form_items": [],
  "pages": {}
}