{
  "schema_name": "DoclingDocument",
  "version": "1.4.0",
  "name": "myfile",
  "origin": {
    "mimetype": "text/markdown",
    "binary_hash": 18309100698272755767,
    "filename": "myfile.md"
  },
  "furniture": {
    "self_ref": "#/furniture",
    "children": [],
    "content_layer": "furniture",
    "name": "_root_",
    "label": "unspecified"
  },
  "body": {
    "self_ref": "#/body",
    "children": [
      {
        "$ref": "#/texts/0"
      },
      {
        "$ref": "#/texts/1"
      },
      {
        "$ref": "#/groups/0"
      },
      {
        "$ref": "#/texts/6"
      },
      {
        "$ref": "#/texts/7"
      },
      {
        "$ref": "#/texts/8"
      },
      {
        "$ref": "#/texts/9"
      },
      {
        "$ref": "#/texts/10"
      },
      {
        "$ref": "#/texts/11"
      },
      {
        "$ref": "#/texts/12"
      },
      {
        "$ref": "#/texts/13"
      },
      {
        "$ref": "#/texts/14"
      },
      {
        "$ref": "#/texts/15"
      },
      {
        "$ref": "#/texts/16"
      },
      {
        "$ref": "#/texts/17"
      },
      {
        "$ref": "#/texts/18"
      },
      {
        "$ref": "#/texts/19"
      },
      {
        "$ref": "#/texts/20"
      },
      {
        "$ref": "#/texts/21"
      },
      {
        "$ref": "#/texts/22"
      },
      {
        "$ref": "#/texts/23"
      },
      {
        "$ref": "#/texts/24"
      },
      {
        "$ref": "#/texts/25"
      },
      {
        "$ref": "#/texts/26"
      },
      {
        "$ref": "#/texts/27"
      },
      {
        "$ref": "#/texts/28"
      },
      {
        "$ref": "#/texts/29"
      },
      {
        "$ref": "#/texts/30"
      },
      {
        "$ref": "#/texts/31"
      },
      {
        "$ref": "#/texts/32"
      },
      {
        "$ref": "#/texts/33"
      },
      {
        "$ref": "#/texts/34"
      },
      {
        "$ref": "#/texts/35"
      },
      {
        "$ref": "#/groups/1"
      },
      {
        "$ref": "#/texts/38"
      },
      {
        "$ref": "#/texts/39"
      },
      {
        "$ref": "#/texts/40"
      },
      {
        "$ref": "#/texts/41"
      },
      {
        "$ref": "#/texts/42"
      },
      {
        "$ref": "#/texts/43"
      },
      {
        "$ref": "#/texts/44"
      },
      {
        "$ref": "#/texts/45"
      },
      {
        "$ref": "#/texts/46"
      },
      {
        "$ref": "#/texts/47"
      },
      {
        "$ref": "#/texts/48"
      },
      {
        "$ref": "#/texts/49"
      },
      {
        "$ref": "#/texts/50"
      },
      {
        "$ref": "#/texts/51"
      },
      {
        "$ref": "#/texts/52"
      },
      {
        "$ref": "#/texts/53"
      },
      {
        "$ref": "#/texts/54"
      },
      {
        "$ref": "#/groups/2"
      },
      {
        "$ref": "#/texts/57"
      },
      {
        "$ref": "#/texts/58"
      },
      {
        "$ref": "#/texts/59"
      },
      {
        "$ref": "#/texts/60"
      },
      {
        "$ref": "#/texts/61"
      },
      {
        "$ref": "#/texts/62"
      },
      {
        "$ref": "#/texts/63"
      },
      {
        "$ref": "#/texts/64"
      },
      {
        "$ref": "#/texts/65"
      },
      {
        "$ref": "#/texts/66"
      },
      {
        "$ref": "#/texts/67"
      },
      {
        "$ref": "#/texts/68"
      },
      {
        "$ref": "#/texts/69"
      },
      {
        "$ref": "#/texts/70"
      },
      {
        "$ref": "#/texts/71"
      },
      {
        "$ref": "#/texts/72"
      },
      {
        "$ref": "#/texts/73"
      },
      {
        "$ref": "#/texts/74"
      },
      {
        "$ref": "#/texts/75"
      },
      {
        "$ref": "#/texts/76"
      },
      {
        "$ref": "#/texts/77"
      },
      {
        "$ref": "#/texts/78"
      },
      {
        "$ref": "#/texts/79"
      },
      {
        "$ref": "#/texts/80"
      },
      {
        "$ref": "#/texts/81"
      },
      {
        "$ref": "#/texts/82"
      },
      {
        "$ref": "#/texts/83"
      },
      {
        "$ref": "#/texts/84"
      },
      {
        "$ref": "#/texts/85"
      },
      {
        "$ref": "#/texts/86"
      },
      {
        "$ref": "#/texts/87"
      },
      {
        "$ref": "#/texts/88"
      },
      {
        "$ref": "#/texts/89"
      },
      {
        "$ref": "#/texts/90"
      },
      {
        "$ref": "#/texts/91"
      },
      {
        "$ref": "#/texts/92"
      },
      {
        "$ref": "#/texts/93"
      },
      {
        "$ref": "#/texts/94"
      },
      {
        "$ref": "#/texts/95"
      },
      {
        "$ref": "#/texts/96"
      },
      {
        "$ref": "#/groups/3"
      },
      {
        "$ref": "#/texts/101"
      }
    ],
    "content_layer": "body",
    "name": "_root_",
    "label": "unspecified"
  },
  "groups": [
    {
      "self_ref": "#/groups/0",
      "parent": {
        "$ref": "#/body"
      },
      "children": [
        {
          "$ref": "#/texts/2"
        },
        {
          "$ref": "#/texts/3"
        },
        {
          "$ref": "#/texts/4"
        },
        {
          "$ref": "#/texts/5"
        }
      ],
      "content_layer": "body",
      "name": "list",
      "label": "list"
    },
    {
      "self_ref": "#/groups/1",
      "parent": {
        "$ref": "#/body"
      },
      "children": [
        {
          "$ref": "#/texts/36"
        },
        {
          "$ref": "#/texts/37"
        }
      ],
      "content_layer": "body",
      "name": "list",
      "label": "list"
    },
    {
      "self_ref": "#/groups/2",
      "parent": {
        "$ref": "#/body"
      },
      "children": [
        {
          "$ref": "#/texts/55"
        },
        {
          "$ref": "#/texts/56"
        }
      ],
      "content_layer": "body",
      "name": "list",
      "label": "list"
    },
    {
      "self_ref": "#/groups/3",
      "parent": {
        "$ref": "#/body"
      },
      "children": [
        {
          "$ref": "#/texts/97"
        },
        {
          "$ref": "#/texts/98"
        },
        {
          "$ref": "#/texts/99"
        },
        {
          "$ref": "#/texts/100"
        }
      ],
      "content_layer": "body",
      "name": "list",
      "label": "list"
    }
  ],
  "texts": [
    {
      "self_ref": "#/texts/0",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "There's no shortage of options for starting a self-hosted blog. Wordpress might be chosen most often, but I stumbled upon  Ghost  recently and their  performance numbers  really got my attention.",
      "text": "There's no shortage of options for starting a self-hosted blog. Wordpress might be chosen most often, but I stumbled upon  Ghost  recently and their  performance numbers  really got my attention."
    },
    {
      "self_ref": "#/texts/1",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "I prefer deploying most things in containers these days with  Fedora CoreOS . Luckily, the Ghost stack doesn't demand a lot of infrastructure:",
      "text": "I prefer deploying most things in containers these days with  Fedora CoreOS . Luckily, the Ghost stack doesn't demand a lot of infrastructure:"
    },
    {
      "self_ref": "#/texts/2",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "Ghost itself",
      "text": "Ghost itself",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/3",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "MySQL 8+ ",
      "text": "MySQL 8+ ",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/4",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "A web server out front",
      "text": "A web server out front",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/5",
      "parent": {
        "$ref": "#/groups/0"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "TLS certificate",
      "text": "TLS certificate",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/6",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "{{< alert >}} Although I chose MariaDB for the database here,  Ghost recommends MySQL  and will throw a warning in the admin panel if you're using something else. I haven't had any issues so far, but  you've been warned . \ud83d\udca3 {{< /alert >}}",
      "text": "{{< alert >}} Although I chose MariaDB for the database here,  Ghost recommends MySQL  and will throw a warning in the admin panel if you're using something else. I haven't had any issues so far, but  you've been warned . \ud83d\udca3 {{< /alert >}}"
    },
    {
      "self_ref": "#/texts/7",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "I picked Caddy for the webserver since it's so small and the configuration is tremendously simple.",
      "text": "I picked Caddy for the webserver since it's so small and the configuration is tremendously simple."
    },
    {
      "self_ref": "#/texts/8",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "title",
      "prov": [],
      "orig": "Launch CoreOS",
      "text": "Launch CoreOS"
    },
    {
      "self_ref": "#/texts/9",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Fedora CoreOS offers lots of  cloud options  for launching it immediately. Many public clouds already have CoreOS images available, but I love Hetzner's US locations and I already had a CoreOS image loaded up in my account.",
      "text": "Fedora CoreOS offers lots of  cloud options  for launching it immediately. Many public clouds already have CoreOS images available, but I love Hetzner's US locations and I already had a CoreOS image loaded up in my account."
    },
    {
      "self_ref": "#/texts/10",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "\ud83c\udde9\ud83c\uddea Want CoreOS at Hetzner? There's a  blog post  for that!",
      "text": "\ud83c\udde9\ud83c\uddea Want CoreOS at Hetzner? There's a  blog post  for that!"
    },
    {
      "self_ref": "#/texts/11",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Once your CoreOS instance is running, connect to the instance over ssh and ensure the ",
      "text": "Once your CoreOS instance is running, connect to the instance over ssh and ensure the "
    },
    {
      "self_ref": "#/texts/12",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "docker.service",
      "text": "docker.service",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/13",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " starts on each boot:",
      "text": " starts on each boot:"
    },
    {
      "self_ref": "#/texts/14",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "sudo systemctl enable --now docker.service",
      "text": "sudo systemctl enable --now docker.service",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/15",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "This ensures that containers come up on each reboot. CoreOS has a podman socket that listens for docker-compatible connections, but that doesn't help with reboots.",
      "text": "This ensures that containers come up on each reboot. CoreOS has a podman socket that listens for docker-compatible connections, but that doesn't help with reboots."
    },
    {
      "self_ref": "#/texts/16",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Perhaps I'm old fashioned, but I still enjoy using  docker-compose  for container management. I like how I can declare what I want and let ",
      "text": "Perhaps I'm old fashioned, but I still enjoy using  docker-compose  for container management. I like how I can declare what I want and let "
    },
    {
      "self_ref": "#/texts/17",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "docker-compose",
      "text": "docker-compose",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/18",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " sort out the rest.",
      "text": " sort out the rest."
    },
    {
      "self_ref": "#/texts/19",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Let's install ",
      "text": "Let's install "
    },
    {
      "self_ref": "#/texts/20",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "docker-compose",
      "text": "docker-compose",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/21",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " on the CoreOS instance now:",
      "text": " on the CoreOS instance now:"
    },
    {
      "self_ref": "#/texts/22",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "# Check the latest version in the GitHub repo before starting!\n# https://github.com/docker/compose\ncurl -LO https://github.com/docker/compose/releases/download/v2.19.0/docker-compose-linux-x86_64\n\n# Install docker-compose and make it executable.\nsudo mv docker-compose-linux-x86_64 /usr/local/bin/docker-compose\nsudo chown +x /usr/local/bin/docker-compose",
      "text": "# Check the latest version in the GitHub repo before starting!\n# https://github.com/docker/compose\ncurl -LO https://github.com/docker/compose/releases/download/v2.19.0/docker-compose-linux-x86_64\n\n# Install docker-compose and make it executable.\nsudo mv docker-compose-linux-x86_64 /usr/local/bin/docker-compose\nsudo chown +x /usr/local/bin/docker-compose",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/23",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Verify that ",
      "text": "Verify that "
    },
    {
      "self_ref": "#/texts/24",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "docker-compose",
      "text": "docker-compose",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/25",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " is ready to go:",
      "text": " is ready to go:"
    },
    {
      "self_ref": "#/texts/26",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "$ docker-compose --version\nDocker Compose version v2.19.0",
      "text": "$ docker-compose --version\nDocker Compose version v2.19.0",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/27",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "title",
      "prov": [],
      "orig": "Preparing Caddy",
      "text": "Preparing Caddy"
    },
    {
      "self_ref": "#/texts/28",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Caddy uses a configuration file called a  Caddyfile  and we need that in place before we deploy the other containers. Within my home directory, I created a directory called  caddy :",
      "text": "Caddy uses a configuration file called a  Caddyfile  and we need that in place before we deploy the other containers. Within my home directory, I created a directory called  caddy :"
    },
    {
      "self_ref": "#/texts/29",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "mkdir caddy",
      "text": "mkdir caddy",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/30",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Then I added the  Caddyfile  inside the directory:",
      "text": "Then I added the  Caddyfile  inside the directory:"
    },
    {
      "self_ref": "#/texts/31",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "{\n    # Your email for LetsEncrypt warnings/notices.\n    email youremail@domain.com \n\n    # Staging LetsEncrypt server to use while testing.\n    # Uncomment this before going to production!\n    acme_ca https://acme-staging-v02.api.letsencrypt.org/directory\n}\n\n# Basic virtual host definition to feed traffic into the\n# Ghost container when it arrives.\nexample.com {\n    reverse_proxy ghost:2368\n}\n\n# OPTIONAL: Redirect traffic to 'www' to the bare domain.\nwww.example.com {\n    redir https://example.com{uri}\n}",
      "text": "{\n    # Your email for LetsEncrypt warnings/notices.\n    email youremail@domain.com \n\n    # Staging LetsEncrypt server to use while testing.\n    # Uncomment this before going to production!\n    acme_ca https://acme-staging-v02.api.letsencrypt.org/directory\n}\n\n# Basic virtual host definition to feed traffic into the\n# Ghost container when it arrives.\nexample.com {\n    reverse_proxy ghost:2368\n}\n\n# OPTIONAL: Redirect traffic to 'www' to the bare domain.\nwww.example.com {\n    redir https://example.com{uri}\n}",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/32",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "This configuration sets up LetsEncrypt certificates automatically from the staging server for now. Once we know our configuration is working well, we can comment out the ",
      "text": "This configuration sets up LetsEncrypt certificates automatically from the staging server for now. Once we know our configuration is working well, we can comment out the "
    },
    {
      "self_ref": "#/texts/33",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "acme_ca",
      "text": "acme_ca",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/34",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " line above and get production TLS certificates.",
      "text": " line above and get production TLS certificates."
    },
    {
      "self_ref": "#/texts/35",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "At this point, you need a DNS record pointed to your server so you can get a certificate. You have some options:",
      "text": "At this point, you need a DNS record pointed to your server so you can get a certificate. You have some options:"
    },
    {
      "self_ref": "#/texts/36",
      "parent": {
        "$ref": "#/groups/1"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "[<RawText children='If the site is entirely new,'>]",
      "text": "[<RawText children='If the site is entirely new,'>]",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/37",
      "parent": {
        "$ref": "#/groups/1"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "[<RawText children=\"If you're migrating from an existing site,\">]",
      "text": "[<RawText children=\"If you're migrating from an existing site,\">]",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/38",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Now we're ready for the rest of the deployment.",
      "text": "Now we're ready for the rest of the deployment."
    },
    {
      "self_ref": "#/texts/39",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "title",
      "prov": [],
      "orig": "Deploying containers",
      "text": "Deploying containers"
    },
    {
      "self_ref": "#/texts/40",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Here's the ",
      "text": "Here's the "
    },
    {
      "self_ref": "#/texts/41",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "docker-compose.yml",
      "text": "docker-compose.yml",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/42",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " file I'm using:",
      "text": " file I'm using:"
    },
    {
      "self_ref": "#/texts/43",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "---\nversion: '3.8'\nservices:\n\n  # OPTIONAL\n  # Watchtower monitors all running containers and updates\n  # them when the upstream container repo is updated.\n  watchtower:\n    image: docker.io/containrrr/watchtower:latest\n    container_name: watchtower\n    restart: unless-stopped\n    hostname: coreos-ghost-deployment\n    environment:\n      - WATCHTOWER_CLEANUP=true\n      - WATCHTOWER_POLL_INTERVAL=3600\n    command:\n      - --cleanup\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n    privileged: true\n\n  # Caddy acts as our external-facing webserver and handles\n  # getting TLS certs from LetsEncrypt.\n  caddy:\n    image: caddy:latest\n    container_name: caddy\n    depends_on:\n      - ghost\n    ports:\n      - 80:80\n      - 443:443\n    restart: unless-stopped\n    volumes:\n      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:Z\n      - ghost:/var/www/html\n      - caddy_data:/data\n      - caddy_config:/config\n\n  # The Ghost blog software itself\n  ghost:\n    image: docker.io/library/ghost:5\n    container_name: ghost\n    restart: always\n    depends_on:\n      - ghostdb\n    environment:\n      url: https://example.com\n      database__client: mysql\n      database__connection__host: ghostdb\n      database__connection__user: ghost\n      database__connection__password: GHOST_PASSWORD_FOR_MARIADB\n      database__connection__database: ghostdb\n    volumes:\n      - ghost:/var/lib/ghost/content\n\n  # Our MariaDB database\n  ghostdb:\n    image: docker.io/library/mariadb:11\n    container_name: ghostdb\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: A_SECURE_ROOT_PASSWORD\n      MYSQL_USER: ghost\n      MYSQL_PASSWORD: GHOST_PASSWORD_FOR_MARIADB\n      MYSQL_DATABASE: ghostdb\n    volumes:\n      - ghostdb:/var/lib/mysql\n\nvolumes:\n  caddy_config:\n  caddy_data:\n  ghost:\n  ghostdb:",
      "text": "---\nversion: '3.8'\nservices:\n\n  # OPTIONAL\n  # Watchtower monitors all running containers and updates\n  # them when the upstream container repo is updated.\n  watchtower:\n    image: docker.io/containrrr/watchtower:latest\n    container_name: watchtower\n    restart: unless-stopped\n    hostname: coreos-ghost-deployment\n    environment:\n      - WATCHTOWER_CLEANUP=true\n      - WATCHTOWER_POLL_INTERVAL=3600\n    command:\n      - --cleanup\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n    privileged: true\n\n  # Caddy acts as our external-facing webserver and handles\n  # getting TLS certs from LetsEncrypt.\n  caddy:\n    image: caddy:latest\n    container_name: caddy\n    depends_on:\n      - ghost\n    ports:\n      - 80:80\n      - 443:443\n    restart: unless-stopped\n    volumes:\n      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:Z\n      - ghost:/var/www/html\n      - caddy_data:/data\n      - caddy_config:/config\n\n  # The Ghost blog software itself\n  ghost:\n    image: docker.io/library/ghost:5\n    container_name: ghost\n    restart: always\n    depends_on:\n      - ghostdb\n    environment:\n      url: https://example.com\n      database__client: mysql\n      database__connection__host: ghostdb\n      database__connection__user: ghost\n      database__connection__password: GHOST_PASSWORD_FOR_MARIADB\n      database__connection__database: ghostdb\n    volumes:\n      - ghost:/var/lib/ghost/content\n\n  # Our MariaDB database\n  ghostdb:\n    image: docker.io/library/mariadb:11\n    container_name: ghostdb\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: A_SECURE_ROOT_PASSWORD\n      MYSQL_USER: ghost\n      MYSQL_PASSWORD: GHOST_PASSWORD_FOR_MARIADB\n      MYSQL_DATABASE: ghostdb\n    volumes:\n      - ghostdb:/var/lib/mysql\n\nvolumes:\n  caddy_config:\n  caddy_data:\n  ghost:\n  ghostdb:",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/44",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "I love  watchtower  but that step is completely optional. It does require some elevated privileges to talk to the podman socket, so  keep that in mind if you choose to use it.",
      "text": "I love  watchtower  but that step is completely optional. It does require some elevated privileges to talk to the podman socket, so  keep that in mind if you choose to use it."
    },
    {
      "self_ref": "#/texts/45",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Our ",
      "text": "Our "
    },
    {
      "self_ref": "#/texts/46",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "ghostdb",
      "text": "ghostdb",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/47",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " container starts first, followed by ",
      "text": " container starts first, followed by "
    },
    {
      "self_ref": "#/texts/48",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "ghost",
      "text": "ghost",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/49",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ", and then ",
      "text": ", and then "
    },
    {
      "self_ref": "#/texts/50",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "caddy",
      "text": "caddy",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/51",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ". That follows the ",
      "text": ". That follows the "
    },
    {
      "self_ref": "#/texts/52",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "depends_on",
      "text": "depends_on",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/53",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " configuration keys shown above.",
      "text": " configuration keys shown above."
    },
    {
      "self_ref": "#/texts/54",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "There are two steps to take now:",
      "text": "There are two steps to take now:"
    },
    {
      "self_ref": "#/texts/55",
      "parent": {
        "$ref": "#/groups/2"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "Replace ",
      "text": "Replace ",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/56",
      "parent": {
        "$ref": "#/groups/2"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "Also, set the ",
      "text": "Also, set the ",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/57",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Once all of that is done, let's let ",
      "text": "Once all of that is done, let's let "
    },
    {
      "self_ref": "#/texts/58",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "docker-compose",
      "text": "docker-compose",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/59",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " do the heavy lifting:",
      "text": " do the heavy lifting:"
    },
    {
      "self_ref": "#/texts/60",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "sudo docker-compose up -d",
      "text": "sudo docker-compose up -d",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/61",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Let's verify that our containers are running:",
      "text": "Let's verify that our containers are running:"
    },
    {
      "self_ref": "#/texts/62",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "$ sudo docker-compose ps\nNAME                IMAGE                                    COMMAND                  SERVICE         \ncaddy               caddy:latest                             \"caddy run --config \u2026\"   caddy           \nghost               docker.io/library/ghost:5                \"docker-entrypoint.s\u2026\"   ghost           \nghostdb             docker.io/library/mariadb:11             \"docker-entrypoint.s\u2026\"   ghostdb         \nwatchtower          docker.io/containrrr/watchtower:latest   \"/watchtower --clean\u2026\"   watchtower",
      "text": "$ sudo docker-compose ps\nNAME                IMAGE                                    COMMAND                  SERVICE         \ncaddy               caddy:latest                             \"caddy run --config \u2026\"   caddy           \nghost               docker.io/library/ghost:5                \"docker-entrypoint.s\u2026\"   ghost           \nghostdb             docker.io/library/mariadb:11             \"docker-entrypoint.s\u2026\"   ghostdb         \nwatchtower          docker.io/containrrr/watchtower:latest   \"/watchtower --clean\u2026\"   watchtower",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/63",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Awesome! \ud83d\udc4f",
      "text": "Awesome! \ud83d\udc4f"
    },
    {
      "self_ref": "#/texts/64",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "title",
      "prov": [],
      "orig": "Ghost initial setup",
      "text": "Ghost initial setup"
    },
    {
      "self_ref": "#/texts/65",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "With all of your containers running, browse to ",
      "text": "With all of your containers running, browse to "
    },
    {
      "self_ref": "#/texts/66",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "https://example.com/ghost/",
      "text": "https://example.com/ghost/",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/67",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Just add ",
      "text": "Just add "
    },
    {
      "self_ref": "#/texts/68",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "/ghost/",
      "text": "/ghost/",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/69",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " to the end of your domain name to reach the admin panel. Create your admin account there with a good password.",
      "text": " to the end of your domain name to reach the admin panel. Create your admin account there with a good password."
    },
    {
      "self_ref": "#/texts/70",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "If everything looks good, run back to your  Caddyfile  and comment out the ",
      "text": "If everything looks good, run back to your  Caddyfile  and comment out the "
    },
    {
      "self_ref": "#/texts/71",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "acme_ca",
      "text": "acme_ca",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/72",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " line:",
      "text": " line:"
    },
    {
      "self_ref": "#/texts/73",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "{\n    # Your email for LetsEncrypt warnings/notices.\n    email youremail@domain.com \n\n    # Staging LetsEncrypt server to use while testing.\n    # Uncomment this before going to production!\n    # acme_ca https://acme-staging-v02.api.letsencrypt.org/directory\n}",
      "text": "{\n    # Your email for LetsEncrypt warnings/notices.\n    email youremail@domain.com \n\n    # Staging LetsEncrypt server to use while testing.\n    # Uncomment this before going to production!\n    # acme_ca https://acme-staging-v02.api.letsencrypt.org/directory\n}",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/74",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Restart the caddy container to get a production LetsEncrypt certificate on the site:",
      "text": "Restart the caddy container to get a production LetsEncrypt certificate on the site:"
    },
    {
      "self_ref": "#/texts/75",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "sudo docker-compose restart caddy",
      "text": "sudo docker-compose restart caddy",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/76",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "title",
      "prov": [],
      "orig": "Customizing Ghost",
      "text": "Customizing Ghost"
    },
    {
      "self_ref": "#/texts/77",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Ghost  looks for lots of environment variables  to determine its configuration and you can set these in your ",
      "text": "Ghost  looks for lots of environment variables  to determine its configuration and you can set these in your "
    },
    {
      "self_ref": "#/texts/78",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "docker-compose.yml",
      "text": "docker-compose.yml",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/79",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " file. Although some configuration items are easy, like ",
      "text": " file. Although some configuration items are easy, like "
    },
    {
      "self_ref": "#/texts/80",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "url",
      "text": "url",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/81",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ", some are nested and get more complicated. For these, you can use double underscores ",
      "text": ", some are nested and get more complicated. For these, you can use double underscores "
    },
    {
      "self_ref": "#/texts/82",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "__",
      "text": "__",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/83",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " to handle the nesting.",
      "text": " to handle the nesting."
    },
    {
      "self_ref": "#/texts/84",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "As an example, we already used ",
      "text": "As an example, we already used "
    },
    {
      "self_ref": "#/texts/85",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "database__connection__host",
      "text": "database__connection__host",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/86",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " in the ",
      "text": " in the "
    },
    {
      "self_ref": "#/texts/87",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "docker-compose.yaml",
      "text": "docker-compose.yaml",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/88",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": ", and that's the equivalent to this nested configuration:",
      "text": ", and that's the equivalent to this nested configuration:"
    },
    {
      "self_ref": "#/texts/89",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "\"database\": {\n    \"connection\": {\n        \"host\": \"...\"\n    }\n}",
      "text": "\"database\": {\n    \"connection\": {\n        \"host\": \"...\"\n    }\n}",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/90",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "If you're deploying in containers, it's a good idea to configure Ghost via environment variables. This ensures that your ",
      "text": "If you're deploying in containers, it's a good idea to configure Ghost via environment variables. This ensures that your "
    },
    {
      "self_ref": "#/texts/91",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "docker-compose.yml",
      "text": "docker-compose.yml",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/92",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " is authoritative for the Ghost deployment. You  can  ",
      "text": " is authoritative for the Ghost deployment. You  can  "
    },
    {
      "self_ref": "#/texts/93",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "code",
      "prov": [],
      "orig": "exec",
      "text": "exec",
      "captions": [],
      "references": [],
      "footnotes": [],
      "code_language": "unknown"
    },
    {
      "self_ref": "#/texts/94",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": " into the container, adjust the config file on disk, and restart Ghost, but then you have to remember where you configured each item. \ud83e\udd75",
      "text": " into the container, adjust the config file on disk, and restart Ghost, but then you have to remember where you configured each item. \ud83e\udd75"
    },
    {
      "self_ref": "#/texts/95",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "title",
      "prov": [],
      "orig": "Switching to production domain",
      "text": "Switching to production domain"
    },
    {
      "self_ref": "#/texts/96",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "If you used a temporary domain to get everything configured and you're ready to use your production domain, follow these steps:",
      "text": "If you used a temporary domain to get everything configured and you're ready to use your production domain, follow these steps:"
    },
    {
      "self_ref": "#/texts/97",
      "parent": {
        "$ref": "#/groups/3"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "Open your ",
      "text": "Open your ",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/98",
      "parent": {
        "$ref": "#/groups/3"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "Restart caddy: ",
      "text": "Restart caddy: ",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/99",
      "parent": {
        "$ref": "#/groups/3"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "Edit the ",
      "text": "Edit the ",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/100",
      "parent": {
        "$ref": "#/groups/3"
      },
      "children": [],
      "content_layer": "body",
      "label": "list_item",
      "prov": [],
      "orig": "Apply the configuration with ",
      "text": "Apply the configuration with ",
      "enumerated": false,
      "marker": "-"
    },
    {
      "self_ref": "#/texts/101",
      "parent": {
        "$ref": "#/body"
      },
      "children": [],
      "content_layer": "body",
      "label": "paragraph",
      "prov": [],
      "orig": "Enjoy your new automatically-updating Ghost blog deployment! \ud83d\udc7b",
      "text": "Enjoy your new automatically-updating Ghost blog deployment! \ud83d\udc7b"
    }
  ],
  "pictures": [],
  "tables": [],
  "key_value_items": [],
  "form_items": [],
  "pages": {}
}